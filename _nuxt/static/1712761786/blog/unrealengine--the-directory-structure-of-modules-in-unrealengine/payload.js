__NUXT_JSONP__("/blog/unrealengine--the-directory-structure-of-modules-in-unrealengine", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ){return {data:[{page:{slug:"the-directory-structure-of-modules-in-unrealengine",description:"結局モジュールのソース配置ってどういう効果を持ってるの？",title:"Unreal Engine におけるモジュール構造とUBTの挙動について",tags:["Unreal Engine","Unreal Build Tool","Unreal C++"],toc:[{id:P,depth:Q,text:P},{id:R,depth:Q,text:R},{id:an,depth:Q,text:ao},{id:ap,depth:Q,text:aq}],body:{type:"root",children:[{type:b,tag:S,props:{id:ar},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E6%A6%82%E8%A6%81",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:ar}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"Unreal Engine で C++を用いた開発を行うとき、まずはじめに出会う概念がモジュールです。Unreal Engine では巨大なプロジェクト(エンジン本体を含む)での機能別の依存関係を適切に管理するために、モジュールと言う仕組みを導入しています。\nこの仕組みは、Unreal Build Tool という C#製のツールによって実装されており、UBT が開発者の追加したモジュールやエンジンが持っているモジュール、マーケットプレイスえ購入してきたプラグインのモジュールなどを認識し、依存関係を解決することで、Unreal Engine でのビルドを実行しています。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"C++ソースを含むモジュールを作成する場合、以下のような構造が基本となります。 (C++モジュールに関連するものだけを記載しています。)"}]},{type:a,value:g},{type:b,tag:I,props:{className:[J]},children:[{type:b,tag:K,props:{className:[T]},children:[{type:b,tag:e,props:{className:[T]},children:[{type:a,value:"Source\n├── ModuleA\n│   ├── ModuleA.Build.cs\n│   └── [ソースを置く場所]\n└── ModuleB\n    ├── ModuleB.Build.cs\n    └── [ソースを置く場所]\n"}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:U}]},{type:a,value:"の下には複数のモジュールを配置することも可能であるため、含むモジュールの個数や分け方によって"},{type:b,tag:e,props:{},children:[{type:a,value:U}]},{type:a,value:"から実際のモジュールのディレクトリまでの経路は異なる場合があります。\n"},{type:b,tag:e,props:{},children:[{type:a,value:U}]},{type:a,value:"直下にモジュールの中身が置かれる場合もありますし、上記のように "},{type:b,tag:e,props:{},children:[{type:a,value:U}]},{type:a,value:" の下に "},{type:b,tag:e,props:{},children:[{type:a,value:as}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:at}]},{type:a,value:"といったように複数のモジュールが配置されることもあります。\nしかし、モジュールのルートディレクトリ上の例では"},{type:b,tag:e,props:{},children:[{type:a,value:as}]},{type:a,value:au},{type:b,tag:e,props:{},children:[{type:a,value:at}]},{type:a,value:"など)の下の構造は、C++モジュールであれば、どの種類のモジュールでも同じルールで認識されます。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"そんな重要なモジュールディレクトリですが、内部のソースファイルの配置をどのようにすればよいかという点において、まとまった情報が皆無です。というか、UBT がモジュール内部のソースをどう認識しているのかのドキュメントが見当たりません。\nこれまでエンジンのモジュール等を見ながら雰囲気で配置を行っていたのですが、そろそろきちんとした理解を得ようと思い立ち、UBT のソースコードから調べてみました。"}]},{type:a,value:g},{type:b,tag:S,props:{id:"検証環境注意"},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E6%A4%9C%E8%A8%BC%E7%92%B0%E5%A2%83%E6%B3%A8%E6%84%8F",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:"検証環境&注意"}]},{type:a,value:g},{type:b,tag:av,props:{},children:[{type:a,value:g},{type:b,tag:L,props:{},children:[{type:a,value:"UE5.0"}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"ざっとソースを眺めてわかったつもりになってる情報を書いているだけなので、間違っているかもしれません。誤りを発見された方はご指摘ください。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"また、本記事で記載しているのは"},{type:b,tag:V,props:{},children:[{type:a,value:"ディレクトリ構造に対する UBT の挙動について"}]},{type:a,value:"であり、"},{type:b,tag:V,props:{},children:[{type:a,value:"モジュールにおけるディレクトリ構造のベストプラクティスなどではない"}]},{type:a,value:"ことにご留意ください。"}]},{type:a,value:g},{type:b,tag:S,props:{id:"モジュールに対する-ubt-の挙動"},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AB%E5%AF%BE%E3%81%99%E3%82%8B-ubt-%E3%81%AE%E6%8C%99%E5%8B%95",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:"モジュールに対する UBT の挙動"}]},{type:a,value:g},{type:b,tag:W,props:{id:P},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%97",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:P}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"本題の前に、モジュールのスコープという概念に触れておきます。UBT 内部では、すべてのモジュールを以下のいずれかのスコープに分類しているようです。"}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:C,props:{},children:[{type:a,value:"スコープ"}]},{type:b,tag:C,props:{},children:[{type:a,value:"なにそれ"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:aw}]},{type:b,tag:h,props:{},children:[{type:a,value:"エンジンが直接保持しているモジュール。 "},{type:b,tag:e,props:{},children:[{type:a,value:"Engine\u002FSource"}]},{type:a,value:" 以下の、 "},{type:b,tag:e,props:{},children:[{type:a,value:"Runtime"}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"Developer"}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"Editor"}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"ThirdParty"}]},{type:a,value:" などに配置されたモジュールはこのスコープに属する。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Engine Plugins"}]},{type:b,tag:h,props:{},children:[{type:a,value:"エンジンがビルトインしているプラグインが保持するモジュール。 "},{type:b,tag:e,props:{},children:[{type:a,value:"Engine\u002FPlugins"}]},{type:a,value:ax}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Engine Programs"}]},{type:b,tag:h,props:{},children:[{type:a,value:"エンジンが保持しているスタンドアロン系のツールが保持するモジュール。 "},{type:b,tag:e,props:{},children:[{type:a,value:"Engine\u002FSource\u002FPrograms"}]},{type:a,value:" 以下にあるモジュールはこのスコープに属する。 "},{type:b,tag:e,props:{},children:[{type:a,value:"UnrealHeaderTool"}]},{type:a,value:" などはこれ。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Marketplace"}]},{type:b,tag:h,props:{},children:[{type:a,value:"マーケットプレイスから入手され、ランチャーによって追加されたプラグインが保持するモジュール。 "},{type:b,tag:e,props:{},children:[{type:a,value:"Engine\u002FPlugins\u002FMarketplace"}]},{type:a,value:ax}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Project"}]},{type:b,tag:h,props:{},children:[{type:a,value:"プロジェクト側で直接保持するモジュール。 "},{type:b,tag:e,props:{},children:[{type:a,value:"[ProjectName]\u002FSource"}]},{type:a,value:" 以下にあるプロジェクトのモジュールと、 "},{type:b,tag:e,props:{},children:[{type:a,value:"[ProjectName]\u002FPlugins"}]},{type:a,value:" 、 "},{type:b,tag:e,props:{},children:[{type:a,value:".uproject"}]},{type:a,value:" ファイルで "},{type:b,tag:e,props:{},children:[{type:a,value:"AddtionalPluginDirectories"}]},{type:a,value:"に指定されたディレクトリにあるプラグインのモジュールはこのスコープに属する。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:"Plugin"}]},{type:b,tag:h,props:{},children:[{type:a,value:"外部プラグイン(Foreign plugin)が保持するモジュール。例えば UBT に "},{type:b,tag:e,props:{},children:[{type:a,value:"-Plugin"}]},{type:a,value:" オプションで特定の "},{type:b,tag:e,props:{},children:[{type:a,value:".uplugin"}]},{type:a,value:" を指定して渡したようなプラグイン) が保持するモジュールはこのスコープに属する。"}]}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"このモジュールのスコープという概念が一体何に使われているのかというと、モジュール間の依存関係の制約に利用されているようです。\nスコープはそれぞれが独立して存在しているわけではなく、包含関係(親子関係)を持っています。具体的には、以下のような関係です。"}]},{type:a,value:g},{type:b,tag:I,props:{className:[J]},children:[{type:b,tag:K,props:{className:[ay]},children:[{type:b,tag:e,props:{className:[ay]},children:[{type:a,value:"Engine (すべての親)\n↑\nEngine Plugins\n↑\nEngine Programs\n↑\nMarketplace\n↑\nProject\n↑\nPlugin (すべての子)"}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"実際の使われ方は後で登場します。"}]},{type:a,value:g},{type:b,tag:W,props:{id:R},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E9%80%A0%E3%81%8C%E3%83%98%E3%83%83%E3%83%80%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AB%E3%83%BC%E3%83%89%E3%81%AB%E3%82%82%E3%81%9F%E3%82%89%E3%81%99%E5%8A%B9%E6%9E%9C",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:R}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"モジュールのディレクトリ構造がもたらす効果の中で最も大きいのは、他のモジュールに対するヘッダファイルの公開\u002F非公開の制御です。この制御はモジュール同士のビルド時のリンケージ(リンク範囲)とも連動しており、モジュールシステムにおける依存関係管理の要となっています。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"たとえば、以下のように "},{type:b,tag:e,props:{},children:[{type:a,value:ak}]},{type:a,value:" ファイルの "},{type:b,tag:e,props:{},children:[{type:a,value:D}]},{type:a,value:" を記述したとします。"}]},{type:a,value:g},{type:b,tag:I,props:{className:[J]},children:[{type:b,tag:K,props:{className:[X]},children:[{type:b,tag:e,props:{className:[X]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:az}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:Y}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aE]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:D}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:Y}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aF}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:"\n\t\tPCHUsage "},{type:b,tag:c,props:{className:[d,"operator"]},children:[{type:a,value:"="}]},{type:a,value:" PCHUsageMode"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:M}]},{type:a,value:"UseExplicitOrSharedPCHs"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:"\n\n\t\tPublicDependencyModuleNames"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aa}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m,ab]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"Core\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aJ}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"CoreUObject\""}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:aJ}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,x]},children:[{type:a,value:"\"Engine\""}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"このモジュールは、 "},{type:b,tag:e,props:{},children:[{type:a,value:"Core"}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:"CoreUObject"}]},{type:a,value:B},{type:b,tag:e,props:{},children:[{type:a,value:aw}]},{type:a,value:" という 3 つのモジュールに依存することになります。\nこれを行うことで、依存指定したモジュールで公開されているヘッダファイルにアクセスできるようになり、バイナリのリンクも通るようになります。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"しかし、"},{type:b,tag:V,props:{},children:[{type:a,value:"公開されたヘッダファイル"}]},{type:a,value:"とはどのように指定されるものなのでしょうか？\nよく見るモジュール構造は以下の様なものです。この例はエンジンの UMG モジュールから借りてきました。"}]},{type:a,value:g},{type:b,tag:I,props:{className:[J]},children:[{type:b,tag:K,props:{className:[T]},children:[{type:b,tag:e,props:{className:[T]},children:[{type:a,value:"UMG\n├── Private\n│   ├── Animation\n│   │   └── ...\n│   └── ...\n├── Public\n│   ├── Animation\n│   │   └── ...\n│   └── ...\n└── UMG.Build.cs\n"}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"このモジュール構造のよく見る要素は、"},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:au},{type:b,tag:e,props:{},children:[{type:a,value:G}]},{type:a,value:"と言ったディレクトリ名だと思います。UBT 内部では、"},{type:b,tag:e,props:{},children:[{type:a,value:"UEBuildModuleCPP"}]},{type:a,value:"というクラスにおいて、これらの特別扱いされるディレクトリが定義されています。"}]},{type:a,value:g},{type:b,tag:av,props:{},children:[{type:a,value:g},{type:b,tag:L,props:{},children:[{type:a,value:A}]},{type:a,value:g},{type:b,tag:L,props:{},children:[{type:a,value:G}]},{type:a,value:g},{type:b,tag:L,props:{},children:[{type:a,value:N}]},{type:a,value:g},{type:b,tag:L,props:{},children:[{type:a,value:z}]},{type:a,value:g}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"これらのフォルダは UBT のソース内では"},{type:b,tag:V,props:{},children:[{type:a,value:al}]},{type:a,value:"と呼称されているため、本記事でも今後はこれに倣います。\nデフォルトインクルードパスはそれぞれ、以下のような効果を持っています。"}]},{type:a,value:aK},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:C,props:{},children:[{type:a,value:al}]},{type:b,tag:C,props:{},children:[{type:a,value:"効果"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:A}]},{type:b,tag:h,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:" ディレクトリを参照してきたモジュールにインクルードパスとして公開する。"},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:" 内のヘッダは依存元モジュールから参照可能になる。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:G}]},{type:b,tag:h,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:" ディレクトリと同様。ただし、"},{type:b,tag:e,props:{},children:[{type:a,value:"bNestedPublicIncludePaths"}]},{type:a,value:"オプションが"},{type:b,tag:e,props:{},children:[{type:a,value:n}]},{type:a,value:"になっている場合においては、"},{type:b,tag:e,props:{},children:[{type:a,value:G}]},{type:a,value:"ディレクトリ内部のディレクトリが再帰的に公開リストに追加される。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:N}]},{type:b,tag:h,props:{},children:[{type:a,value:"参照してきたモジュールのスコープが、自分属するスコープと同じか、いずれかの親スコープに含まれている(つまり、自分と同じか、より内部のモジュールである)場合にのみ、"},{type:b,tag:e,props:{},children:[{type:a,value:N}]},{type:a,value:"ディレクトリをインクルードパスとして公開する。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:z}]},{type:b,tag:h,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:"は、このディレクトリを含むモジュール自身をコンパイルする際、モジュール内部からインクルード可能なインクルードパスとしてプライベートなコンパイル環境に追加される。"},{type:b,tag:"br",props:{},children:[]},{type:a,value:"他のモジュールに依存されたとしても、"},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:"がインクルードパスとして他のモジュールに公開されることはない。"}]}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"デフォルトで用意されている構造を利用する場合、以上のフォルダを利用すれば、依存関係を適切に制御したモジュールを構築することができます。"}]},{type:a,value:g},{type:b,tag:W,props:{id:an},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#ubt-%E3%81%AE%E5%86%85%E9%83%A8%E3%81%A7%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AB%E3%83%BC%E3%83%89%E3%83%91%E3%82%B9%E3%81%AE%E8%BF%BD%E5%8A%A0%E5%87%A6%E7%90%86",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:ao}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"ここまででデフォルトインクルードパスの働きをは掴めましたが、インクルードパスについてはもうちょっと書けることがあります。\nまず、デフォルトインクルードパスの UBT ハードコード部分がどういった処理を行っているかを以下に示します。"}]},{type:a,value:aK},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:C,props:{},children:[{type:a,value:al}]},{type:b,tag:C,props:{},children:[{type:a,value:"具体処理"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:A}]},{type:b,tag:h,props:{},children:[{type:a,value:af},{type:b,tag:e,props:{},children:[{type:a,value:aL}]},{type:a,value:am},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:aM}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:G}]},{type:b,tag:h,props:{},children:[{type:a,value:af},{type:b,tag:e,props:{},children:[{type:a,value:aL}]},{type:a,value:am},{type:b,tag:e,props:{},children:[{type:a,value:G}]},{type:a,value:" のパスを追加する。また、そのサブディレクトリを"},{type:b,tag:e,props:{},children:[{type:a,value:"LegacyPublicIncludePaths"}]},{type:a,value:"に再帰的に追加する。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:N}]},{type:b,tag:h,props:{},children:[{type:a,value:af},{type:b,tag:e,props:{},children:[{type:a,value:"InternalIncludePaths"}]},{type:a,value:"に、"},{type:b,tag:e,props:{},children:[{type:a,value:N}]},{type:a,value:"のパスを追加する。"}]}]},{type:b,tag:l,props:{},children:[{type:b,tag:h,props:{},children:[{type:a,value:z}]},{type:b,tag:h,props:{},children:[{type:a,value:af},{type:b,tag:e,props:{},children:[{type:a,value:"PrivateIncludePaths"}]},{type:a,value:am},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:aM}]}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"これらは、特定の名称のディレクトリを、モジュール定義クラスの特定のメンバに追加するという処理を行っているだけです。\n重要なのはここからで、これらが追加されている追加先のメンバには、普段モジュール定義として記述している"},{type:b,tag:e,props:{},children:[{type:a,value:ak}]},{type:a,value:"の"},{type:b,tag:e,props:{},children:[{type:a,value:D}]},{type:a,value:"からも間接的にパスの追加が可能なのです。"}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"すごそうに言いましたが、これ自体はすでにやったことがある人も多いかと思います。重要なのはむしろ逆で、デフォルトインクルードパスは予め定義されているというだけで、それほど特別なものではなく、適切に定義すれば"},{type:b,tag:e,props:{},children:[{type:a,value:D}]},{type:a,value:"からでも同等の効果を得る可能なディレクトリであるということです。"}]},{type:a,value:g},{type:b,tag:W,props:{id:ap},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#modulerules-%E3%81%AB%E3%82%88%E3%82%8B%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AB%E3%83%BC%E3%83%89%E3%83%91%E3%82%B9%E3%81%AE%E5%88%B6%E5%BE%A1%E6%96%B9%E6%B3%95",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:aq}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"さて、ここからの情報はインターネットにも落ちているものだと思いますが、 "},{type:b,tag:e,props:{},children:[{type:a,value:ak}]},{type:a,value:" こと "},{type:b,tag:e,props:{},children:[{type:a,value:D}]},{type:a,value:" からモジュールが公開するインクルードパスの制御を行う方法を紹介します。"}]},{type:a,value:g},{type:b,tag:I,props:{className:[J]},children:[{type:b,tag:K,props:{className:[X]},children:[{type:b,tag:e,props:{className:[X]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:az}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aA]},children:[{type:a,value:aB}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:aC},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:Y}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,aE]},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:D}]}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:Y}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aF}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:_}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:a,value:aI},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:aN}]},{type:a,value:"\n\t\tPublicIncludePaths"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aa}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m,ab]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F* 参照してきたモジュールに公開したいディレクトリを指定 *\u002F"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:"\n\t\tInternalncludePaths"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aa}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m,ab]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F* 参照してきたモジュールが自分と同じスコープか、"}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\t\t\tより内部（親方向）のモジュールであれば公開したいディレクトリを指定 *\u002F"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:"\n\t\tPrivateIncludePaths"},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aa}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,m,ab]},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ac}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:ad}]}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:s}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:"\u002F* このモジュール自身のビルドでインクルードパスとして利用したい内部のディレクトリを指定 *\u002F"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:u}]},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:w}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,H]},children:[{type:a,value:aN}]},{type:a,value:E},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,f]},children:[{type:a,value:v}]},{type:a,value:g}]}]}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"これらを適切に設定すれば、デフォルトインクルードパスの構造を完全に無視して、独自の構造のモジュールを定義することも可能だと思います。"}]},{type:a,value:g},{type:b,tag:S,props:{id:aO},children:[{type:b,tag:o,props:{ariaHidden:n,href:"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB",tabIndex:p},children:[{type:b,tag:c,props:{className:[q,r]},children:[]}]},{type:a,value:aO}]},{type:a,value:g},{type:b,tag:j,props:{},children:[{type:a,value:"なんでこの情報こんなに無いんだろう？"}]}]},dir:"\u002Farticles\u002Funrealengine",path:aP,extension:".md",createdAt:ag,updatedAt:ag,gitCreatedAt:ag,gitUpdatedAt:ag},path:aP}],fetch:{"data-v-08b63208:0":{prevTitle:O,nextTitle:O,existPrev:aQ,existNext:aQ,prevSlug:O,nextSlug:O,seriesPage:O}},mutations:void 0}}("text","element","span","token","code","punctuation","\n","td"," ","p","keyword","tr","class-name","true","a",-1,"icon","icon-link","{","(",")","}",";","string","\n\t\t","Private","Classes",", ","th","ModuleRules","\n\t","function","Public","comment","div","remark-highlight","pre","li",".","Internal","","モジュールのスコープ",2,"ディレクトリ構造がヘッダのインクルードにもたらす効果","h1","language-treeview","Source","strong","h2","language-csharp","public","ExampleModule",":","AddRange","new","constructor-invocation","[","]","\n\t\t\t","自身のモジュール定義クラスのメンバ ","2022-04-16T17:57:26.000Z","table","thead","tbody",".Build.cs","デフォルトインクルードパス"," に、","ubt-の内部でのインクルードパスの追加処理","UBT の内部でのインクルードパスの追加処理","modulerules-によるモジュールのインクルードパスの制御方法","ModuleRules によるモジュールのインクルードパスの制御方法","概要","ModuleA","ModuleB","や","ul","Engine"," 以下にあるプラグインが持つモジュールはこのスコープに属する。","language-unknown","using","namespace","UnrealBuildTool","\n\n","class","type-list","ReadOnlyTargetRules"," Target","base","Target",",","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","PublicIncludePaths"," のパスを追加する。","\u002F\u002F 略","おわりに","\u002Farticles\u002Funrealengine\u002Fthe-directory-structure-of-modules-in-unrealengine",false)));