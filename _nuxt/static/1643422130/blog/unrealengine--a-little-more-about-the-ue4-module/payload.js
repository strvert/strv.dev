__NUXT_JSONP__("/blog/unrealengine--a-little-more-about-the-ue4-module", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh){return {data:[{}],fetch:{"blogpost-content:0":{page:{slug:"a-little-more-about-the-ue4-module",description:"UE4のモジュールシステムについて、すこしだけ詳しく書いた記事",title:"ちょっとだけくわしくUE4 モジュールの話",enforceCreatedAt:"2019\u002F7\u002F28",enforceUpdatedAt:"2019\u002F10\u002F29",tags:["Unreal Engine","Unreal C++"],assets:"\u002Farticle-assets\u002Funrealengine\u002Fa-little-more-about-the-ue4-module",toc:[{id:O,depth:p,text:O},{id:P,depth:p,text:P},{id:Q,depth:p,text:Q},{id:R,depth:p,text:R},{id:ap,depth:p,text:aq},{id:ar,depth:as,text:Y},{id:at,depth:as,text:au},{id:av,depth:p,text:aw},{id:ax,depth:p,text:y},{id:ay,depth:p,text:A},{id:az,depth:p,text:B},{id:S,depth:p,text:S},{id:aA,depth:p,text:Z},{id:aB,depth:p,text:_},{id:aC,depth:p,text:$},{id:aD,depth:p,text:aa}],body:{type:"root",children:[{type:b,tag:z,props:{id:aE},children:[{type:b,tag:h,props:{href:"#%E8%B6%A3%E6%97%A8",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aE}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UE4 は本当にいろいろなことができますが、特定のトピックに対する情報のまとまった記事というのがあまりない気がします。\n手順書的な記事は結構あったりするのですが、そのものに対する解説記事的なのは更にない気がします。なので、UE4 の勉強がてら書いてみました。この記事を読むときは、手元で同じように実装を読んでいってもらえるとわかりやすいかと思います。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"僕は趣味で UE4 をやっているへっぽこ学生なので、なにか間違っていたら遠慮なくご指摘いただけると、僕とこの記事を今後見る人が助かります。"}]},{type:a,value:c},{type:b,tag:z,props:{id:aF},children:[{type:b,tag:h,props:{href:"#%E7%92%B0%E5%A2%83",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aF}]},{type:a,value:c},{type:b,tag:aG,props:{},children:[{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"エンジンバージョン: 4.22.3"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"プロジェクト名: MyProject"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"OS: Windows 10"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"プロジェクト名や環境依存の名前などは適時読み替えてください。"}]},{type:a,value:c},{type:b,tag:z,props:{id:aH},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aH}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UE4 においてモジュールとは、エンジンを構成する構成単位そのものです。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"エンジン自体が大きな塊ではなく、機能ごとにモジュールという形で分割されています。また、UE4 においてはプラグインもモジュールとして実装されます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"さらに、エンジンを用いて開発される C++プロジェクトのソースも、新たなモジュールとして扱われます。\n以下にモジュールのイメージ図を示します。\n"},{type:b,tag:T,props:{alt:"UE4Archtecture.png",src:"\u002Farticle-assets\u002Funrealengine\u002Fa-little-more-about-the-ue4-module\u002F\u002Fmodule-architecture.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"この図を見ていただくと、エンジンとして持っている大量のモジュールの中に、C++プロジェクトで実装した内容が新規モジュールとして追加されている構造がわかりやすいと思います。この C++プロジェクトで実装を行うモジュールのことを、ゲームモジュールといいます。特に、C++プロジェクト作成時にデフォルトで作成されるゲームモジュールのことをプライマリゲームモジュールと呼び、プライマリゲームモジュールはプロジェクトに 1 つしか存在できません。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UE4 におけるビルドは、モジュール単位で行われます。ビルドを行うと、1 モジュールにつき 1 つの"},{type:b,tag:e,props:{},children:[{type:a,value:".dll"}]},{type:a,value:"、つまりダイナミックリンクライブラリが出力されます。こうしてビルドされたダイナミックリンクライブラリを読み込んでいき、結果として UE4 という大きなシステムが動作していることになります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UE4 はこのようなアーキテクチャによって、Unreal C++プログラマがお世話になっている"},{type:b,tag:v,props:{},children:[{type:a,value:aI}]},{type:a,value:"を実現しています。本来 C++のような事前コンパイルを必要とする言語は、対象のプログラムを起動したままソースを再コンパイルして変更を反映するなどもちろんできません。しかし、UE4 ではこのようなモジュール単位でのビルドの仕組みがあるため、UE4 という大きな視点ではプログラムを起動したまま、変更のあったモジュールのみリビルドし、変更前に読み込んでいた dll をアンロード、変更後の dll を"},{type:b,tag:v,props:{},children:[{type:a,value:aI}]},{type:a,value:"しているのです。モジュール様様、動的リンク様様ですね。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"なお、モジュールのビルド結果である dll の場所は、UE4 上で"},{type:b,tag:e,props:{},children:[{type:a,value:"module list"}]},{type:a,value:"というコマンドを打つと簡単に確認できます。\n"},{type:b,tag:T,props:{alt:ab,src:"\u002Farticle-assets\u002Funrealengine\u002Fa-little-more-about-the-ue4-module\u002F\u002Fmodule-list-console.png"},children:[]}]},{type:a,value:c},{type:b,tag:q,props:{id:O},children:[{type:b,tag:h,props:{href:"#%E3%82%B2%E3%83%BC%E3%83%A0%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E6%84%8F%E7%BE%A9",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"プライマリゲームモジュール以外にゲームモジュールを追加作成すべきシチュエーションの例を挙げておきます。\nプロジェクト上で独自のアセットを実装し、ゲーム上で利用するとします。この独自アセットには、エディタ上での作成機能、インポート機能、独自エディタが実装されています。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"この時、アセット自体に含まれるプロパティやメソッドは、ゲーム上に必要な情報です。しかし、エディタ機能やインポート機能などは、ゲーム上に必要な情報でしょうか？これはエディタを用いて制作を行う過程において必要な実装情報であって、Shipping ビルドを行ってユーザーにゲームを公開する際には含む必要のない情報です。しかしそんな都合はビルドシステムもコンパイラも察してくれないため、1 つのモジュールに愚直に実装してしまうと、エディタにしか必要のない情報をゲームに含めてしまいます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここで新規モジュールの登場です。UE4 のビルドシステムには、ビルド設定ごとにビルドに含めるモジュールを変更する機能が用意されています。このため、新規モジュールを用意しカスタムエディタや新規作成機能部分のみをこちらに実装、Editor ビルド時にのみ対象とするよう設定すれば、Game ビルド(Shipping ビルドなどのこと)時にはゲームに必要な実装のみを含めることができるようになります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"また、モジュールを分割することでビルド時のリンク速度を上げることができます。ただし、ゲーム実装自体を分割すると、リンク速度の向上とトレードオフとして実行時に読み込む DLL の数が増えるため、ゲームプレイにおいては悪影響を及ぼす恐れがあり（ますと公式に書いてあり）ます。実際の影響の程度は検証を行っていないためわかりませんが、そこまで大きな影響はなさそうな気もします。というか Game ビルド時にはサードパーティ製以外のバイナリは実行ファイルにまとめられているはずですが、モジュール数は影響するんでしょうか？"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"コードの結合度を下げて、使い回しを楽にしやすいという利点もあります。"}]},{type:a,value:c},{type:b,tag:q,props:{id:P},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E6%A7%8B%E6%88%90",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:P}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"C++プロジェクトを作成すると、Source 以下はこんな構成になっていると思います。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[K]},children:[{type:b,tag:o,props:{className:[U]},children:[{type:b,tag:e,props:{className:[U]},children:[{type:a,value:aJ}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここで"},{type:b,tag:e,props:{},children:[{type:a,value:"MyProject"}]},{type:a,value:"というディレクトリの中に入っているのが、C++プロジェクト作成時に生成されるプライマリゲームモジュールです。\n"},{type:b,tag:e,props:{},children:[{type:a,value:ac}]},{type:a,value:", "},{type:b,tag:e,props:{},children:[{type:a,value:ad}]},{type:a,value:"といった C++ファイルはモジュールについての実装を行うために用意されているファイルです。"}]},{type:a,value:c},{type:b,tag:q,props:{id:Q},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここで重要なのは"},{type:b,tag:e,props:{},children:[{type:a,value:L}]},{type:a,value:"という C#ファイルです。このファイルは、モジュールに関する各種設定を行うためのファイルで、モジュールファイルと呼ばれるものです。UE4 でビルドを行う際には、ビルドツールがモジュールファイルを探索し、モジュールを認識することで、モジュールに含まれるコードが適切な設定でビルドされます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"では、デフォルトで生成されている"},{type:b,tag:e,props:{},children:[{type:a,value:L}]},{type:a,value:"を覗いてみましょう。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:L}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[ae]},children:[{type:a,value:"\u002F\u002F Fill out your copyright notice in the Description page of Project Settings.\n\nusing UnrealBuildTool;\n\npublic class MyProject : ModuleRules\n{\n\tpublic MyProject(ReadOnlyTargetRules Target) : base(Target)\n\t{\n\t\tPCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;\n\n\t\tPublicDependencyModuleNames.AddRange(new string[] { \"Core\", \"CoreUObject\", \"Engine\", \"InputCore\" });\n\n\t\tPrivateDependencyModuleNames.AddRange(new string[] {  });\n\t}\n}"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"デフォルトでは、そこまで複雑な設定は行われていません。"},{type:b,tag:e,props:{},children:[{type:a,value:aK}]},{type:a,value:"というメンバ変数の配列になにか文字列を追加しているところと、"},{type:b,tag:e,props:{},children:[{type:a,value:aL}]},{type:a,value:"というメンバ変数になにか代入しているところだけです。順に説明します。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"配列"},{type:b,tag:e,props:{},children:[{type:a,value:aK}]},{type:a,value:"は、この"},{type:b,tag:e,props:{},children:[{type:a,value:L}]},{type:a,value:"が示すモジュールが依存するモジュールの名前をセットし、モジュール内で外部の依存するモジュールを利用できるように設定する変数です。依存しているモジュールがここに含まれていないと、ビルド時にエラーが出ます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:aL}]},{type:a,value:"というのは、IWYU(Include-What-You-Use)というシステムの利用方法について設定する変数です。IWYU についてはここでは解説しませんが、簡単に言えば依存関係をいい感じに整理することでビルド速度などを早くしてくれる機能です。詳細は以下の記事とドキュメントを御覧ください。"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"IWYU でコーディングしよう\n"},{type:b,tag:h,props:{href:aM,rel:[G,H,I],target:J},children:[{type:a,value:aM}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"IWYU リファレンス ガイド\n"},{type:b,tag:h,props:{href:aN,rel:[G,H,I],target:J},children:[{type:a,value:aN}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここではこの 2 つしか設定が行われていませんが、他にも多くの設定項目が存在します。\n設定可能な項目については以下の記事とドキュメントが詳しいです。"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ModuleRules(XXX.build.cs ファイル)について\n"},{type:b,tag:h,props:{href:aO,rel:[G,H,I],target:J},children:[{type:a,value:aO}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"アンリアル ビルド システムのモジュール ファイル\n"},{type:b,tag:h,props:{href:aP,rel:[G,H,I],target:J},children:[{type:a,value:aP}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"設定項目に代入すべき列挙型の中身が不明だったりして困惑することがありますが、そんなときにはエンジンソースに含まれているビルドツールのソースを読みに行きましょう！！"}]},{type:a,value:c},{type:b,tag:q,props:{id:R},children:[{type:b,tag:h,props:{href:"#%E3%82%BF%E3%83%BC%E3%82%B2%E3%83%83%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:"Source"}]},{type:a,value:"の直下にある"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:x},{type:b,tag:e,props:{},children:[{type:a,value:V}]},{type:a,value:"の 2 つの C#ファイルもやはりビルドに関する設定を行うファイルで、ターゲットファイルと呼ばれるものです。これらの中では、上記の"},{type:b,tag:e,props:{},children:[{type:a,value:L}]},{type:a,value:"等で発見されたモジュールのうち、”どれを”ビルド対象にするかという設定を行います。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"つまり、モジュールとして完璧な形のコードを作成しても、ここに設定を追記しなければモジュールはビルドに含まれないということです。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"では、なぜこのファイルは 2 つ生成されるのでしょうか。ここで、Game ビルド時と Editor ビルド時で含まれるモジュールを変えられるというところに話が戻ります。\n"},{type:b,tag:e,props:{},children:[{type:a,value:V}]},{type:a,value:"に設定したモジュールは Editor ビルド時にビルド対象となり、"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:"に設定したモジュールは Game ビルド時にビルド対象となるといったように、使い分けることができます。\n試しに、"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:"の方を見てみます。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:E}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[ae]},children:[{type:a,value:"\u002F\u002F Fill out your copyright notice in the Description page of Project Settings.\n\nusing UnrealBuildTool;\nusing System.Collections.Generic;\n\npublic class MyProjectTarget : TargetRules\n{\n\tpublic MyProjectTarget(TargetInfo Target) : base(Target)\n\t{\n\t\tType = TargetType.Game;\n\n\t\tExtraModuleNames.AddRange( new string[] { \"MyProject\" } );\n\t}\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"まず、"},{type:b,tag:e,props:{},children:[{type:a,value:Y}]},{type:a,value:"という変数にこの"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:"によって行われるビルドの種類を指定しています。ちなみに、ビルドツールのコードではこの"},{type:b,tag:e,props:{},children:[{type:a,value:aQ}]},{type:a,value:"という型は以下のように列挙型として定義されています。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:"ビルドツールより抜粋(TargetRules.cs)"}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[ae]},children:[{type:a,value:"\tpublic enum TargetType\n\t{\n\t\tGame,\n\t\tEditor,\n\t\tClient,\n\t\tServer,\n\t\tProgram,\n\t}"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"生成される"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:x},{type:b,tag:e,props:{},children:[{type:a,value:V}]},{type:a,value:"は"},{type:b,tag:e,props:{},children:[{type:a,value:aQ}]},{type:a,value:"に"},{type:b,tag:e,props:{},children:[{type:a,value:"Game"}]},{type:a,value:x},{type:b,tag:e,props:{},children:[{type:a,value:aR}]},{type:a,value:"が設定されたターゲットファイルですが、ビルドツールを見るとまだ他にもタイプがあるようです。"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"アンリアルビルド システムのターゲット ファイル\n"},{type:b,tag:h,props:{href:aS,rel:[G,H,I],target:J},children:[{type:a,value:aS}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"公式から引用させていただくと、それぞれこんな意味があるそうです。"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Game - クック済みデータの実行を要求するスタンドアロン ゲームです。\nClient - Game と同じですが、サーバー コードは含まれません。ネットワーク ゲームに役立ちます。\nServer - Game と同じですが、クライアント コードは含まれません。ネットワーク ゲームのデディケイテッド サーバーに役立ちます。\nEditor - アンリアル エディタを拡張するターゲットです。\nProgram - アンリアル エンジンに加えてビルドされているスタンドアロン ユーティリティ プログラムです。"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"なお、引用元に重大な誤植があったため、引用文は一部修正を加えています。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"これだけビルドタイプがあるにも関わらず、デフォルトでは 2 種類分しか生成されないということは、自分でターゲットファイルを追加することができるということです。ターゲットファイルの作成については流石に話がそれすぎるのでここでは解説しません。ちなみに、同じビルドタイプのターゲットファイルを複数作成しても、1 つしか認識されませんのでご注意ください。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"次に、"},{type:b,tag:e,props:{},children:[{type:a,value:aT}]},{type:a,value:"です。ここが重要なところで、ビルドターゲットにするモジュールの識別名をセットする配列です。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"デフォルトではゲームモジュールがプライマリゲームモジュール 1 つしかないので 1 つしか指定されておらず、"},{type:b,tag:e,props:{},children:[{type:a,value:E}]},{type:a,value:W},{type:b,tag:e,props:{},children:[{type:a,value:V}]},{type:a,value:"どちらも同じ設定になっていますが、前述のような都合でモジュールを追加した場合は大変便利です。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"IDE などからビルドを行う際には、ターゲットファイルのクラス名が併記されたビルド設定が生成されているので、対応するものを選択すれば、どちらの設定でビルドを行うか指定することができます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:ap},children:[{type:b,tag:h,props:{href:"#uproject-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aq}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UE4 のプロジェクト直下に生成される"},{type:b,tag:e,props:{},children:[{type:a,value:af}]},{type:a,value:"ファイルにもモジュールに関する設定項目が存在します。\n今回生成された"},{type:b,tag:e,props:{},children:[{type:a,value:ag}]},{type:a,value:"を覗いてみます。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:ag}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[aU]},children:[{type:a,value:"{\n\t\"FileVersion\": 3,\n\t\"EngineAssociation\": \"4.22\",\n\t\"Category\": \"\",\n\t\"Description\": \"\",\n\t\"Modules\": [\n\t\t{\n\t\t\t\"Name\": \"MyProject\",\n\t\t\t\"Type\": \"Runtime\",\n\t\t\t\"LoadingPhase\": \"Default\"\n\t\t}\n\t]\n}"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールに関する項目は"},{type:b,tag:e,props:{},children:[{type:a,value:"\"Modules\""}]},{type:a,value:"の箇所です。ここには、プロジェクトで定義したモジュールを設定します。モジュールファイルやターゲットファイルには基本的にビルドに関する設定を行ってきましたが、"},{type:b,tag:e,props:{},children:[{type:a,value:af}]},{type:a,value:"に記述するのは起動時の読み込み対象のモジュールの識別名です。ここに記述しなくてもビルド対象にすることはできますが、起動時の読み込みやホットリロード等の対象にはなりません。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"また、識別名だけでなく、そのモジュールを読み込む動作タイプと、読み込みタイミングも設定することができます。それぞれ以下のようになっています。"}]},{type:a,value:c},{type:b,tag:aV,props:{id:ar},children:[{type:b,tag:h,props:{href:"#type",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:Y}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:F,props:{},children:[{type:a,value:"読み込み時タイプ名"}]},{type:b,tag:F,props:{},children:[{type:a,value:"概要"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"Runtime"}]},{type:b,tag:f,props:{},children:[{type:a,value:"通常実行時には読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"RuntimeNoCommandlet"}]},{type:b,tag:f,props:{},children:[{type:a,value:"実行時、コマンドレットでない場合読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"RuntimeAndProgram"}]},{type:b,tag:f,props:{},children:[{type:a,value:"実行時かつビルドターゲットが Progarm である場合読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"CookedOnly"}]},{type:b,tag:f,props:{},children:[{type:a,value:"クックビルドされた後の場合読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"Developer"}]},{type:b,tag:f,props:{},children:[{type:a,value:"デベロッパツールをサポートしたエンジン上でのみ読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aR}]},{type:b,tag:f,props:{},children:[{type:a,value:"エディタビルドの場合読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"EditorNoCommandlet"}]},{type:b,tag:f,props:{},children:[{type:a,value:"エディタビルドかつコマンドレットでない場合読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"Program"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Program ビルドされた場合のみ読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"ServerOnly"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Server ビルドされた場合のみ読み込む"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"ClientOnly"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Client ビルドされた場合のみ読み込む"}]}]}]}]},{type:a,value:c},{type:b,tag:aV,props:{id:at},children:[{type:b,tag:h,props:{href:"#loadingphase",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:au}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:F,props:{},children:[{type:a,value:"読み込み順"}]},{type:b,tag:F,props:{},children:[{type:a,value:"ローディングフェーズ名"}]},{type:b,tag:F,props:{},children:[{type:a,value:"タイミング"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aW}]},{type:b,tag:f,props:{},children:[{type:a,value:"EarliestPossible"}]},{type:b,tag:f,props:{},children:[{type:a,value:"可能な限り最も早く読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aX}]},{type:b,tag:f,props:{},children:[{type:a,value:"PostConfigInit"}]},{type:b,tag:f,props:{},children:[{type:a,value:"エンジン設定の初期化後に読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aY}]},{type:b,tag:f,props:{},children:[{type:a,value:"PreEaryLoadingScreen"}]},{type:b,tag:f,props:{},children:[{type:a,value:"PreLoadingScreen よりも前に読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aZ}]},{type:b,tag:f,props:{},children:[{type:a,value:"PreLoadingScreen"}]},{type:b,tag:f,props:{},children:[{type:a,value:"画面が起動する前に読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"5"}]},{type:b,tag:f,props:{},children:[{type:a,value:"PreDefault"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Default の前に読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"6"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Default"}]},{type:b,tag:f,props:{},children:[{type:a,value:"通常のモジュールロードタイミングで読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"7"}]},{type:b,tag:f,props:{},children:[{type:a,value:"PostDefault"}]},{type:b,tag:f,props:{},children:[{type:a,value:"Default の後に読み込みます"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"8"}]},{type:b,tag:f,props:{},children:[{type:a,value:"PostEngineInit"}]},{type:b,tag:f,props:{},children:[{type:a,value:"エンジンの初期化処理が終了したあとに読み込みます"}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"なお、モジュールを追加する際には以下のようにします。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:ag}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[aU]},children:[{type:a,value:"{\n\t\"FileVersion\": 3,\n\t\"EngineAssociation\": \"4.22\",\n\t\"Category\": \"\",\n\t\"Description\": \"\",\n\t\"Modules\": [\n\t\t{\n\t\t\t\"Name\": \"MyProject\",\n\t\t\t\"Type\": \"Runtime\",\n\t\t\t\"LoadingPhase\": \"Default\"\n\t\t},\n\t\t{\n\t\t\t\"Name\": \"NewModule\",\n\t\t\t\"Type\": \"Editor\",\n\t\t\t\"LoadingPhase\": \"Default\"\n\t\t}\n\t]\n}"}]}]}]},{type:a,value:c},{type:b,tag:q,props:{id:av},children:[{type:b,tag:h,props:{href:"#%E3%81%AA%E3%81%9C%E3%83%93%E3%83%AB%E3%83%89%E8%A8%AD%E5%AE%9A%E3%81%8C-c",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aw}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"設定ファイルが C#なのは、UE4 のビルドツールが本体が C#で書かれていることに由来します。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールファイルや後述のターゲットファイルといった C#による設定ファイルは、Generate ~などのメニューからプロジェクトを生成する際にビルドが行われ、そのプロジェクトにおけるモジュールのビルドルールとなる DLL が生成されます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"これをビルドツール本体が動的リンクすることで、C++プロジェクトのゲームモジュールを含めた適切なビルドを行っているんだと思います。（間違っていたらごめんなさい）\n謎のビルドエラーが起こったときに Intermediate を消すと動くのはここにも一因があると思われます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"コンテキストメニュー\n"},{type:b,tag:T,props:{alt:ab,src:"\u002Farticle-assets\u002Funrealengine\u002Fa-little-more-about-the-ue4-module\u002F\u002Fbuild-context-menu.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"生成されたビルドルールの DLL\n"},{type:b,tag:T,props:{alt:ab,src:"\u002Farticle-assets\u002Funrealengine\u002Fa-little-more-about-the-ue4-module\u002F\u002Fbuild-rule-dlls.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"単なる設定ファイルとしてだけでなく、ビルド時に行いたい処理なども記述できるので結構便利です。"}]},{type:a,value:c},{type:b,tag:z,props:{id:a_},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E5%AE%9F%E8%A3%85%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:a_}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここまでモジュールの設定方法とビルドについて詳しく見てきましたが、肝心のモジュールの宣言方法に触れていません。モジュール自体は C++実装なのですから、モジュールの宣言も C++で行ってやる必要があります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"改めてモジュールの構成を示します。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[K]},children:[{type:b,tag:o,props:{className:[U]},children:[{type:b,tag:e,props:{className:[U]},children:[{type:a,value:aJ}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"C#のファイルたちは皆設定を行うファイルだったので、モジュールの実装を行うのは残った C++ファイル 2 つ、"},{type:b,tag:e,props:{},children:[{type:a,value:ad}]},{type:a,value:W},{type:b,tag:e,props:{},children:[{type:a,value:ac}]},{type:a,value:"です。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"とりあえず、デフォルトの状態のこの 2 つのファイルを見てみましょう。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:ad}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[u]},children:[{type:a,value:"\u002F\u002F Fill out your copyright notice in the Description page of Project Settings.\n\n#pragma once\n\n#include \"CoreMinimal.h\""}]}]}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:ac}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[u]},children:[{type:a,value:"\u002F\u002F Fill out your copyright notice in the Description page of Project Settings.\n\n#include \"MyProject.h\"\n#include \"Modules\u002FModuleManager.h\"\n\nIMPLEMENT_PRIMARY_GAME_MODULE( FDefaultGameModuleImpl, MyProject, \"MyProject\" );"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"もはや無です。というか、実装らしき箇所が 1 箇所しかありません。\nこれはこの C++プロジェクトが生成した、プライマリゲームモジュールをコードであるため、"},{type:b,tag:e,props:{},children:[{type:a,value:y}]},{type:a,value:"というマクロで、そのマクロ名の通りプライマリゲームモジュールが実装されています。\nでは、このマクロを含め、モジュール定義のためのマクロたちを紹介します。"}]},{type:a,value:c},{type:b,tag:q,props:{id:ax},children:[{type:b,tag:h,props:{href:"#implement_primary_game_module",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:y}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"これはたった今登場した、プライマリゲームモジュール実装のためのマクロです。\nプライマリゲームモジュールはプロジェクト上に 1 つしか実装できないため、必然的にこのマクロもプロジェクトを通して 1 つのモジュールにしか書くことはありません。逆に、これがないと Shipping ビルドなどのモノリシックビルド時にビルドが通らないんじゃないかと思います。(試してないです)"}]},{type:a,value:c},{type:b,tag:i,props:{className:[K]},children:[{type:b,tag:o,props:{className:[u]},children:[{type:b,tag:e,props:{className:[u]},children:[{type:b,tag:g,props:{className:[r,ak]},children:[{type:a,value:y}]},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:x}]},{type:a,value:an},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:x}]},{type:a,value:" GameName"},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:ao}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"このマクロは、第一引数に"},{type:b,tag:v,props:{},children:[{type:a,value:"モジュールを実装したクラス"}]},{type:a,value:"、第二引数に"},{type:b,tag:v,props:{},children:[{type:a,value:"モジュール名"}]},{type:a,value:"、第三引数に"},{type:b,tag:v,props:{},children:[{type:a,value:"ゲーム(プロジェクト)名"}]},{type:a,value:"を取ります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"第一引数に渡すモジュールを実装したクラスは、後述の"},{type:b,tag:e,props:{},children:[{type:a,value:X}]},{type:a,value:"というインターフェイスを継承して実装したモジュールクラスを渡すことができます。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"第二引数に渡すモジュール名は、他のモジュールやエンジン上からこのモジュールを識別する際の名称として使われる文字列を決定します。実装クラスと同じ名前である必要はありません。例えば、ターゲットファイルの"},{type:b,tag:e,props:{},children:[{type:a,value:aT}]},{type:a,value:"に渡していたのはここで決定される識別名です。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"第三引数はゲーム(プロジェクト)名を渡すのですが、実装を覗くと、この第三引数はもう利用されていません。昔はここに渡したゲーム名を利用した処理が行われていたようなのですが、現在は"},{type:b,tag:e,props:{},children:[{type:a,value:af}]},{type:a,value:"ファイルから自動的にプロジェクト名をパースしてくるようで、コード上でも廃止予定とされています。おそらく残っているのは後方互換性のためでしょう。現状も値を渡さなければエラーが出ますが、実際は文字列さえ渡しておけば良いと思われます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:ay},children:[{type:b,tag:h,props:{href:"#implement_game_module",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:A}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"こちらはゲームモジュールを実装するためのマクロです。ゲームモジュールはプライマリゲームモジュールと異なり、プロジェクト上に複数個実装することが可能なため、このマクロも複数のモジュールに書くことができます。ゲームコードを含むモジュールはこれで実装しましょう。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[K]},children:[{type:b,tag:o,props:{className:[u]},children:[{type:b,tag:e,props:{className:[u]},children:[{type:b,tag:g,props:{className:[r,ak]},children:[{type:a,value:A}]},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:x}]},{type:a,value:an},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:ao}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"第一引数と第二引数はプライマリゲームモジュールの場合と同じで、実装クラスとその識別名を与えます。\n(プライマリゲームモジュールの第三引数は廃止予定だったので、中身は異なりますが渡しているものは実質同じですね。)"}]},{type:a,value:c},{type:b,tag:q,props:{id:az},children:[{type:b,tag:h,props:{href:"#implement_module",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"こちらはシンプルなモジュールを実装するためのマクロです。ゲームコードを含まないモジュールはこのマクロで実装されます。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[K]},children:[{type:b,tag:o,props:{className:[u]},children:[{type:b,tag:e,props:{className:[u]},children:[{type:b,tag:g,props:{className:[r,ak]},children:[{type:a,value:B}]},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:al}]},{type:a,value:am},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:x}]},{type:a,value:an},{type:b,tag:g,props:{className:[r,w]},children:[{type:a,value:ao}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"渡している引数は"},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:"と同様です。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここで使われている"},{type:b,tag:e,props:{},children:[{type:a,value:y}]},{type:a,value:"というマクロはプライマリゲームモジュールを実装する(implement なので)マクロなのですが、実は初期状態では、はじめから用意されている"},{type:b,tag:e,props:{},children:[{type:a,value:M}]},{type:a,value:"という最低限のクラスをゲームモジュールとして利用(代用？)しているだけです。もっとモジュールクラス自体に機能を持たせるために用意されている手段は後述しますので、とりあえず"},{type:b,tag:e,props:{},children:[{type:a,value:M}]},{type:a,value:"の中身を見てみます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:S},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%AE%9F%E8%A3%85%E3%83%9E%E3%82%AF%E3%83%AD%E3%81%AE%E4%BD%99%E8%AB%87",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:"font",props:{color:"darkred"},children:[{type:a,value:c},{type:b,tag:v,props:{},children:[{type:a,value:"この節には不確定要素が多いです。"}]},{type:a,value:c}]},{type:a,value:"\n\nここまで紹介してきたモジュール実装のためのマクロたちですが、実装を見るとこれらはビルド方式によって内部処理が変動しているようです。プラットフォームなどによる変動はもちろんあるのですが、最も大きいのが**Monolithic(一枚岩)\n"},{type:b,tag:v,props:{},children:[{type:a,value:W}]},{type:a,value:"\nModular(まとまりごと)**という 2 種類のリンクタイプのによる違いです。\nリンクがわからない方は詳しくは調べてほしいのですが、ざっくり言えばコンパイルした複数のファイルや必要なライブラリを正しく関連付ける作業です。\n"},{type:b,tag:d,props:{},children:[{type:a,value:"この 2 つのリンクタイプによって生まれるビルドの結果は「ビルド結果として得られるバイナリが実行ファイルにまとまっているか、多量の.dll などに分散しているか」の違いがあります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"パッケージングのビルドや Game ビルド(Shipping ビルド)などは実行ファイルとしてバイナリがまとまるため"},{type:b,tag:v,props:{},children:[{type:a,value:"Monolithic"}]},{type:a,value:"で行われて、Editor ビルドの際などは.dll としてバイナリがモジュールごとに生成されるため"},{type:b,tag:v,props:{},children:[{type:a,value:"Modular"}]},{type:a,value:"で行われていることがわかります。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"そして、Modular でリンクが行われる際、前述の"},{type:b,tag:e,props:{},children:[{type:a,value:B}]},{type:a,value:x},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:x},{type:b,tag:e,props:{},children:[{type:a,value:y}]},{type:a,value:"の 3 つのモジュール実装マクロの内部処理に"},{type:b,tag:v,props:{},children:[{type:a,value:"差はありません"}]},{type:a,value:"。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"すべての実装マクロが、リンクタイプが Modular 時の"},{type:b,tag:e,props:{},children:[{type:a,value:B}]},{type:a,value:"の処理へと渡されています。これは推測ですが、Modular すなわち Editor 上で開発を行っている際には、エンジンというソフトウェアの管理はエンジン側にあるため、ゲームモジュールを含めすべてのモジュールは内部的には同等のプログラムとして扱われているのではないでしょうか。確かに、Game ビルド時のようにプライマリゲームモジュール中心で動作していたら、それ自身のホットリロードは困難な気がします。(怪しいです。違ったら指摘してほしいところ No.1 です)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"一方 Monolithic 時の実装は"},{type:b,tag:e,props:{},children:[{type:a,value:y}]},{type:a,value:"が独自の複雑な処理に変わったり、"},{type:b,tag:e,props:{},children:[{type:a,value:B}]},{type:a,value:"の処理からホットリロードの処理が外されたりしています。しかし、実装を見る限りでは"},{type:b,tag:e,props:{},children:[{type:a,value:B}]},{type:a,value:W},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:"の間にはこちらでも差異は見られない気がします……。というか、"},{type:b,tag:e,props:{},children:[{type:a,value:A}]},{type:a,value:"の実装は常に以下になっています。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:a$}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[u]},children:[{type:a,value:"#define IMPLEMENT_GAME_MODULE( ModuleImplClass, ModuleName ) \\\n\tIMPLEMENT_MODULE( ModuleImplClass, ModuleName )"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"うーん。各所の説明を読むと別のものとされているのですが、表面上のものなのでしょうか？有識者の方、教えて下さい。"}]},{type:a,value:c},{type:b,tag:z,props:{id:ba},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:ba}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここでは、モジュール実装マクロに渡すモジュールクラスについて触れます。\n例として、デフォルトで生成された"},{type:b,tag:e,props:{},children:[{type:a,value:y}]},{type:a,value:"に渡されていた"},{type:b,tag:e,props:{},children:[{type:a,value:M}]},{type:a,value:"クラスの実装に注目しましょう。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:a$}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[u]},children:[{type:a,value:"class FDefaultModuleImpl\n\t: public IModuleInterface\n{ };\n\nclass FDefaultGameModuleImpl\n\t: public FDefaultModuleImpl\n{\n\tvirtual bool IsGameModule() const override\n\t{\n\t\treturn true;\n\t}\n};"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここからわかることは、"},{type:b,tag:e,props:{},children:[{type:a,value:X}]},{type:a,value:"というクラス(インターフェイス?)を継承して、先程の"},{type:b,tag:e,props:{},children:[{type:a,value:M}]},{type:a,value:"は作られていたということです。そして、"},{type:b,tag:e,props:{},children:[{type:a,value:M}]},{type:a,value:"は唯一つ、"},{type:b,tag:e,props:{},children:[{type:a,value:bb}]},{type:a,value:"という"},{type:b,tag:e,props:{},children:[{type:a,value:"bool"}]},{type:a,value:"を返すメソッドで"},{type:b,tag:e,props:{},children:[{type:a,value:j}]},{type:a,value:"を返すというオーバーライドが実装されています。"},{type:b,tag:e,props:{},children:[{type:a,value:bb}]},{type:a,value:"はその名と型の通り、自らがゲームモジュールである場合"},{type:b,tag:e,props:{},children:[{type:a,value:j}]},{type:a,value:"を返すよう設定するためのメソッドです。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"ここではこれ 1 つのみですが、"},{type:b,tag:e,props:{},children:[{type:a,value:X}]},{type:a,value:"が宣言・定義されている"},{type:b,tag:e,props:{},children:[{type:a,value:"ModuleInterface.h"}]},{type:a,value:"の実装を覗くと、他のオーバーライド可能なメソッドを知ることができます。自分でゲームモジュールを追加で宣言する場合には、このあたりを利用することが多いため、一度目を通しておくと良いです。一応ドキュメントもありますが、実装ファイル以上の情報はありません。"}]},{type:a,value:c},{type:b,tag:D,props:{},children:[{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"IModuleInterface\n"},{type:b,tag:h,props:{href:bc,rel:[G,H,I],target:J},children:[{type:a,value:bc}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:bd},children:[{type:b,tag:h,props:{href:"#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E5%AE%9F%E8%A3%85%E3%81%AB%E5%A4%9A%E7%94%A8%E3%81%95%E3%82%8C%E3%82%8B%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:bd}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{},children:[{type:a,value:X}]},{type:a,value:"には、設定項目的なメソッド以外にも、モジュールの実装にあたって非常に重要なメソッドがいくつか定義されています。\nそれらをオーバライドすることで、独自モジュール実装に利用することができます。ここでは、特に使用頻度の高いメソッドについて触れます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:aA},children:[{type:b,tag:h,props:{href:"#startupmodule",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:Z}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールの DLL がロードが開始された直後に呼び出されるメソッドです。モジュールのオブジェクトが作成されて真っ先に呼び出されると考えれば良いです。ここには、依存関係にあるモジュールの読み込みや、このモジュールで行う実装の初期化処理などを行うことができます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:aB},children:[{type:b,tag:h,props:{href:"#postloadcallback",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:_}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールのロードが後に実行されるメソッドです。"}]},{type:a,value:c},{type:b,tag:q,props:{id:aC},children:[{type:b,tag:h,props:{href:"#shutdonwmodule",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:$}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールが完全にアンロードされる直前に呼び出されます。終了時処理などを行うことができます。"}]},{type:a,value:c},{type:b,tag:q,props:{id:aD},children:[{type:b,tag:h,props:{href:"#preunloadcallback",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:aa}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"モジュールのアンロード開始前に呼び出されるメソッドです。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"この 4 つのメソッドを以下のような実装でオーバーライドしてビルドの上、ホットリロードが行われた場合の出力を確認してみます。"}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:"実装例.cpp"}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:[u]},children:[{type:a,value:"\n\u002F*\n** このコードは単体では動作しません。また、ShutdownModuleとPreUnloadCallbackについては\n** 前回ビルドの結果が出力されるため、2回以上リビルドしなければ後述の出力は得られません。\n*\u002F\n\nclass FMyProjectModule : public FDefaultGameModuleImpl\n{\npublic:\n    virtual void StartupModule() override\n    {\n        UE_LOG(LogTemp, Log, TEXT(\"StartupModule\"))\n    }\n\n    virtual void PostLoadCallback() override\n    {\n        UE_LOG(LogTemp, Log, TEXT(\"PostLoadCallback\"))\n    }\n\n    virtual void ShutdownModule() override\n    {\n        UE_LOG(LogTemp, Log, TEXT(\"ShutdonwModule\"))\n    }\n\n    virtual void PreUnloadCallback() override\n    {\n        UE_LOG(LogTemp, Log, TEXT(\"PreUnloadCallback\"))\n    }\n};\n\nIMPLEMENT_PRIMARY_GAME_MODULE(FMyProjectModule, MyProjectModule, \"MyProject\")\n"}]}]}]},{type:a,value:c},{type:b,tag:i,props:{className:[s]},children:[{type:b,tag:i,props:{className:[t]},children:[{type:a,value:"ホットリロード時の出力"}]},{type:b,tag:o,props:{},children:[{type:b,tag:e,props:{className:["language-text"]},children:[{type:a,value:"LogTemp: PreUnloadCallback\nLogTemp: ShutdonwModule\nLogTemp: StartupModule\nLogTemp: PostLoadCallback"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"つまり、以下のような実行順で実行されるということがわかります。"}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:ah,props:{},children:[{type:b,tag:ai,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:F,props:{},children:[{type:a,value:"実行順"}]},{type:b,tag:F,props:{},children:[{type:a,value:"メソッド名"}]}]}]},{type:b,tag:aj,props:{},children:[{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aW}]},{type:b,tag:f,props:{},children:[{type:a,value:Z}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aX}]},{type:b,tag:f,props:{},children:[{type:a,value:_}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"-"}]},{type:b,tag:f,props:{},children:[{type:a,value:"(モジュール動作中)"}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aY}]},{type:b,tag:f,props:{},children:[{type:a,value:aa}]}]},{type:b,tag:k,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:aZ}]},{type:b,tag:f,props:{},children:[{type:a,value:$}]}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"これらは本当によく使うため、覚えておきましょう。"}]},{type:a,value:c},{type:b,tag:z,props:{id:be},children:[{type:b,tag:h,props:{href:"#%E3%81%BE%E3%81%A8%E3%82%81",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:be}]},{type:a,value:c},{type:b,tag:aG,props:{},children:[{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"UE4 はモジュールの集合体！"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"モジュールには種類があって、使い分ける"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"モジュールは自作できる。"}]},{type:a,value:c},{type:b,tag:C,props:{},children:[{type:a,value:"モジュール実装のための便利なものが親として提供されているから、頑張って使いこなそう！"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{id:bf},children:[{type:b,tag:h,props:{href:"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB",ariaHidden:j,tabIndex:l},children:[{type:b,tag:g,props:{className:[m,n]},children:[]}]},{type:a,value:bf}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"粗く長くやりましたが、モジュールの宣言のされかたやビルドツールとの関わりなどが少しわかっていただけたら嬉しいです。"}]}]},dir:"\u002Farticles\u002Funrealengine",path:bg,extension:".md",createdAt:"2019-07-28T00:00:00.000Z",updatedAt:"2019-10-29T00:00:00.000Z",gitCreatedAt:"2021-11-25T20:46:01.000Z",gitUpdatedAt:"2022-01-29T00:45:39.000Z"},path:bg},"data-v-08b63208:0":{prevTitle:N,nextTitle:N,existPrev:bh,existNext:bh,prevSlug:N,nextSlug:N,seriesPage:N}},mutations:void 0}}("text","element","\n","p","code","td","span","a","div","true","tr",-1,"icon","icon-link","pre",2,"h2","token","code-extra","filename","language-cpp","strong","punctuation",",","IMPLEMENT_PRIMARY_GAME_MODULE","h1","IMPLEMENT_GAME_MODULE","IMPLEMENT_MODULE","li","blockquote","MyProject.Target.cs","th","nofollow","noopener","noreferrer","_blank","remark-highlight","MyProject.Build.cs","FDefaultGameModuleImpl","","ゲームモジュールを追加する意義","モジュールの構成","モジュールファイル","ターゲットファイル","モジュール実装マクロの余談","img","language-treeview","MyProjectEditor.Target.cs","と","IModuleInterface","Type","StartupModule","PostLoadCallback","ShutdonwModule","PreUnloadCallback","image.png","MyProject.cpp","MyProject.h","language-csharp",".uproject","MyProject.uproject","table","thead","tbody","function","(","ModuleImplClass"," ModuleName",")","uproject-ファイル",".uproject ファイル","type",3,"loadingphase","LoadingPhase","なぜビルド設定が-c","なぜビルド設定が C#?","implement_primary_game_module","implement_game_module","implement_module","startupmodule","postloadcallback","shutdonwmodule","preunloadcallback","趣旨","環境","ul","モジュール","ホットリロード","-- Source\n    |-- MyProject\n    |   |-- MyProject.Build.cs\n    |   |-- MyProject.cpp\n    |   `-- MyProject.h\n    |-- MyProject.Target.cs\n    `-- MyProjectEditor.Target.cs\n","PublicDependencyModuleNames","PCHUsage","http:\u002F\u002Fmiyahuji111.hatenablog.com\u002Fentry\u002F2017\u002F04\u002F03\u002F081222","https:\u002F\u002Fapi.unrealengine.com\u002FJPN\u002FProgramming\u002FUnrealBuildSystem\u002FIWYUReferenceGuide\u002Findex.html","https:\u002F\u002Fqiita.com\u002Ftakayashiki2\u002Fitems\u002Fdb995c558024c3db8223","https:\u002F\u002Fapi.unrealengine.com\u002FJPN\u002FProgramming\u002FUnrealBuildSystem\u002FModuleFiles\u002Findex.html","TargetType","Editor","https:\u002F\u002Fapi.unrealengine.com\u002FJPN\u002FProgramming\u002FUnrealBuildSystem\u002FTargetFiles\u002Findex.html","ExtraModuleNames","language-json","h3","1","2","3","4","モジュールの実装を確認してみる","ModuleManager.hより抜粋","モジュールクラスについて","IsGameModule","https:\u002F\u002Fapi.unrealengine.com\u002FINT\u002FAPI\u002FRuntime\u002FCore\u002FModules\u002FIModuleInterface\u002Findex.html","モジュール実装に多用されるメソッド","まとめ","おわりに","\u002Farticles\u002Funrealengine\u002Fa-little-more-about-the-ue4-module",false)));