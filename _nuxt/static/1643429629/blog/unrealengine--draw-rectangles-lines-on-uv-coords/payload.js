__NUXT_JSONP__("/blog/unrealengine--draw-rectangles-lines-on-uv-coords", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y){return {data:[{}],fetch:{"blogpost-content:0":{page:{slug:"draw-rectangles-lines-on-uv-coords",description:"UEのマテリアルを使って、UV座標上に図形を描画するメモ",title:"マテリアルでUV座標上に長方形とかを描く",tags:["Unreal Engine","UE Material"],assets:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords",toc:[],body:{type:"root",children:[{type:b,tag:g,props:{id:q},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#%E8%B6%A3%E6%97%A8",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:q}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UV 座標空間に長方形とかの図形を描くマテリアルを遊びで作ったのでメモとして記事にしておきます。以下のようなことになります。"}]},{type:a,value:c},{type:b,tag:"video",props:{autoPlay:p,loop:p,muted:p,src:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords\u002F\u002Frectangles.mp4"},children:[{type:a,value:"draw-rect-mask-internal"}]},{type:a,value:c},{type:b,tag:g,props:{id:r},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#%E7%92%B0%E5%A2%83",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:r}]},{type:a,value:c},{type:b,tag:"ul",props:{},children:[{type:a,value:c},{type:b,tag:"li",props:{},children:[{type:a,value:"Engine Version: 5.0.0 Early Access 2"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:g,props:{id:"uv-座標から長方形マスクを作成する"},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#uv-%E5%BA%A7%E6%A8%99%E3%81%8B%E3%82%89%E9%95%B7%E6%96%B9%E5%BD%A2%E3%83%9E%E3%82%B9%E3%82%AF%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:"UV 座標から長方形マスクを作成する"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"まず、以下のような Material Function を作成しました。Custom ノード内部の内部で各ピクセルの UV 座標に基づいて長方形の内外を判定し、マスクを作成しています。\n"},{type:b,tag:n,props:{alt:"draw-rect-mask-internal.png",src:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords\u002F\u002Fdraw-rect-mask-internal.png"},children:[]}]},{type:a,value:c},{type:b,tag:s,props:{className:["code-extra"]},children:[{type:b,tag:s,props:{className:["filename"]},children:[{type:a,value:"Custom Nodeのコード"}]},{type:b,tag:"pre",props:{},children:[{type:b,tag:e,props:{className:["language-hlsl"]},children:[{type:a,value:"float range = abs(UVs.x - 0.5 + Offset.x);\nfloat half_w = Width \u002F 2;\n\nfloat ubGrad = (0.5 - abs(UVs.y - 0.5 + Offset.y)) * 2;\nfloat mask = int((ubGrad - CutOut*2) + 0.999999);\n\nfloat lineBase = 1-int(range - half_w + 0.999999);\n\nreturn mask * lineBase;"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"シェーダーにおいては、ifなどによる分岐命令パイプライン上で分岐が発生する機能を使用すると大きな性能低下が見られるため、ifを用いない形で記述しています。そのため少しわかりにくくなっていますが、やっていることは"},{type:b,tag:e,props:{},children:[{type:a,value:t}]},{type:a,value:"の幅を持ち、上下を"},{type:b,tag:e,props:{},children:[{type:a,value:"CutOut"}]},{type:a,value:"の大きさだけカットされ、"},{type:b,tag:e,props:{},children:[{type:a,value:"Offset"}]},{type:a,value:"分描画位置をオフセットされた長方形を想定し、該当ピクセルに対応するUV座標がその内側か外側かを判定しているだけです。これだけで、長方形のマスクを作成することができます。(ノードを見るとCustomRotatorによる入力UVの回転を行い、長方形を回転させる機能が入っていますが、汎用性のために入れただけで今回は使っていません)"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"しかし、このパラメータだとすこし使いにくいので、より長方形マスクを作成することに特化したマテリアル関数でラップします。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:n,props:{alt:"draw-rect-mask.png",src:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords\u002F\u002Fdraw-rect-mask.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"こちらは極めて単純です。先程のマテリアル関数の入力パラメータを"},{type:b,tag:e,props:{},children:[{type:a,value:"UVs"}]},{type:a,value:o},{type:b,tag:e,props:{},children:[{type:a,value:t}]},{type:a,value:o},{type:b,tag:e,props:{},children:[{type:a,value:"Height"}]},{type:a,value:o},{type:b,tag:e,props:{},children:[{type:a,value:"Left"}]},{type:a,value:o},{type:b,tag:e,props:{},children:[{type:a,value:"Top"}]},{type:a,value:" という扱いやすいものにするための前処理を加えただけです。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"せっかくですので、長方形マスクだけでなく、透明度と色を持った長方形を描画するマテリアル関数も作ってみましょう。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:n,props:{alt:"draw-color-rect.png",src:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords\u002F\u002Fdraw-color-rect.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"このネットワークでは、先ほど作成した長方形マスク関数を元に、長方形の色と背景の色を透明度付きで指定できるようにしています。\nこれで位置・サイズ・色が指定可能な長方形が作れたので、これを素材に何かを生成するなり、テクスチャに合成するなりして自由に使うことができます。\n今回はテストですので、テクスチャに対して異なる色・透明度を持つ複数の正方形をアルファブレンドするサンプル(冒頭に示していたもの)を作成しました。"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:n,props:{alt:"final-node.png",src:"\u002Farticle-assets\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords\u002F\u002Ffinal-node.png"},children:[]},{type:a,value:"\nこちらがサンプルのネットワークです。(動きをつけている部分は今回の本質ではないので入れていません)"}]},{type:a,value:c},{type:b,tag:g,props:{id:u},children:[{type:b,tag:h,props:{ariaHidden:i,href:"#%E3%81%BE%E3%81%A8%E3%82%81",tabIndex:j},children:[{type:b,tag:k,props:{className:[l,m]},children:[]}]},{type:a,value:u}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"UV座標を元に図形を描くのは案外簡単にできる。今回は長方形だったので(擬似的な)条件分岐で実装したが、円のような陰関数も同様の考え方で描画できる。次はレイマーチングしたい。"}]}]},dir:"\u002Farticles\u002Funrealengine",path:v,extension:".md",createdAt:w,updatedAt:x,gitCreatedAt:w,gitUpdatedAt:x},path:v},"data-v-08b63208:0":{prevTitle:f,nextTitle:f,existPrev:y,existNext:y,prevSlug:f,nextSlug:f,seriesPage:f}},mutations:void 0}}("text","element","\n","p","code","","h1","a","true",-1,"span","icon","icon-link","img"," ",true,"趣旨","環境","div","Width","まとめ","\u002Farticles\u002Funrealengine\u002Fdraw-rectangles-lines-on-uv-coords","2022-01-29T00:45:39.000Z","2022-01-29T04:11:50.000Z",false)));