__NUXT_JSONP__("/blog/series", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC,cD,cE,cF,cG,cH,cI,cJ,cK,cL,cM,cN,cO,cP,cQ,cR,cS,cT,cU,cV,cW,cX,cY,cZ,c_,c$,da,db,dc,dd,de,df,dg,dh,di,dj,dk,dl,dm,dn,do0,dp,dq){return {data:[{}],fetch:{"data-v-3a86942c:0":{serieses:[{name:P,contents:[{slug:"opengl-2",description:P,title:"OpenGL入門から3DCGレンダラ実装まで その2",series:P,seriesIndex:B,tags:[as],toc:[{id:aG,depth:B,text:aG},{id:aH,depth:B,text:aH},{id:aI,depth:U,text:aI},{id:aJ,depth:U,text:aJ}],body:{type:W,children:[{type:b,tag:ak,props:{id:"そもそもopenglとは"},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82opengl%E3%81%A8%E3%81%AF",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:"そもそもOpenGLとは?"}]},{type:a,value:f},{type:b,tag:E,props:{id:aG},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E6%A6%82%E8%A6%81",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"OpenGLとは、Khronos Groupという団体が策定している2D\u002F3D グラフィックスライブラリの"},{type:b,tag:F,props:{},children:[{type:a,value:"オープン標準規格"}]},{type:a,value:"です。\nつまり、Khronos GroupはOpenGLという"},{type:b,tag:F,props:{},children:[{type:a,value:"ライブラリそのもの"}]},{type:a,value:"の実装は行なっておらず、どのような命令でどのような効果が得られるのかというAPIの策定と公開を行なっているということになります。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"通常、私達が利用することになるライブラリとしてのOpenGLは、GPUの各開発企業が自社のGPU向けに実装を行なったものとなります[^1]。\nOpenGLはオープン標準でありどの企業も自社のGPUで利用できるようにすることができます。しかし、世に存在するOpenGLを使いたいGPU全てで動く実装を1つの団体が公開するのは事実上不可能であるため、このような形になっていると思われます。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"OpenGL自体は、GPUなどのハードウェアやそれを制御するデバイスドライバに近い低レベルなAPIです[^2]。"}]},{type:a,value:f},{type:b,tag:E,props:{id:aH},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E3%82%A2%E3%83%BC%E3%82%AD%E3%83%86%E3%82%AF%E3%83%81%E3%83%A3",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aH}]},{type:a,value:f},{type:b,tag:X,props:{id:aI},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aI}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"OpenGLは、それ自体が巨大なステートマシンとなっています。内部的にOpenGLのステートを示す変数を持つ巨大なデータ構造を保持しており、このデータ構造のことをOpenGLではコンテキストと言います。OpenGLを用いたプログラミングでは、用意されたAPIを用いてOpenGLに命令を発行し、コンテキストを更新することで描画を制御することになります。\nコンテキストは同時に複数発行することが可能で、例えば同時にOpenGLを用いたウィンドウを複数起動する場合、ウィンドウごとに更新対象とするコンテキストをスイッチングすることでOpenGLを用いたGPUレンダリングを同時に行うことができます。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"言葉ではあまりしっくりこないかもしれませんが、この点は実際にOpenGLでプログラムを記述するとよくわかります[^3]。"}]},{type:a,value:f},{type:b,tag:X,props:{id:aJ},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E3%83%97%E3%83%AD%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%A8%E3%83%AC%E3%83%B3%E3%83%80%E3%83%AA%E3%83%B3%E3%82%B0%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"OpenGLにおける"},{type:b,tag:F,props:{},children:[{type:a,value:"プロファイル"}]},{type:a,value:"とは、簡単に言うとコンテキストが保持する状態の種類やそれに対する制御を行うインターフェースの種類などによって区別されるAPIセットのことです。\n2019年現在のOpenGLには、"},{type:b,tag:F,props:{},children:[{type:a,value:"コアプロファイル(Core contexts)"},{type:b,tag:F,props:{},children:[{type:a,value:bv}]},{type:a,value:bb}]},{type:a,value:"の2つのプロファイルが存在します。これらのプロファイルはそれぞれ別の仕様として独立してOpenGLの各バージョンごとに策定されています。以下の画像はKhronos Groupページで公開されている仕様一覧の様子です。\n"},{type:b,tag:aK,props:{alt:"DeepinScreenshot_select-area_20191215065917.png",src:"https:\u002F\u002Fqiita-image-store.s3.ap-northeast-1.amazonaws.com\u002F0\u002F225893\u002F2d404c14-f0dc-3d43-52a0-052ffc5002ba.png"},children:[]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"同一のバージョンに対して複数のAPIが用意されているのは一見不思議ですが、これにはOpenGLの歴史的経緯が関係しています。OpenGLはバージョン3.0以上と未満で大きく思想が異なっており、そこにAPI的な互換性はありません。つまり、OpenGL 2.xのころのコードをOpenGL 3.xや4.x環境で普通に動かそうとしても、APIが変化しているためビルドできないということです。[^4]\nそして、各バージョンが提供しているメインの最新API仕様、これがコア仕様であり、"},{type:b,tag:F,props:{},children:[{type:a,value:bw}]},{type:a,value:"であるということになります。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"しかし、高バージョンのOpenGLが提供する機能を、OpenGL 2.x以前のAPI仕様に則ったコードから利用したい、3.x以上への対応のためにコードを書き換えたくないという需要も存在します。そのようなケースのために今現在も用意されているのが各バージョンの"},{type:b,tag:F,props:{},children:[{type:a,value:bb}]},{type:a,value:"であるということのようです。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"コアプロファイルと互換プロファイルの主な違いとして、主要な"},{type:b,tag:F,props:{},children:[{type:a,value:bx}]},{type:a,value:"の違いがあります。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:F,props:{},children:[{type:a,value:bx}]},{type:a,value:"とは頂点データやテクスチャデータなどの元データから、実際に画面に描画する2次元の画像データを生成するまでの過程のことです。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:F,props:{},children:[{type:a,value:bw}]},{type:a,value:"で採用されているレンダリングパイプラインは**GLSL(OpenGL Shading Language)**と呼ばれるGPU上で実行される専用のプログラミング言語(シェーダー言語)を用いたもので、このようなプログラマによって設計・記述が可能なシェーダー言語を用いたレンダリングパイプラインは「"},{type:b,tag:F,props:{},children:[{type:a,value:"プログラマブルシェーダ"}]},{type:a,value:"を用いたレンダリングパイプライン」であると言われます。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"一方、"},{type:b,tag:F,props:{},children:[{type:a,value:bb}]},{type:a,value:"で利用できるレンダリングパイプラインは**固定機能パイプライン(Fixed function pipeline)**であると言われます。\nそれぞれのパイプラインの特徴を以下に示します。"}]},{type:a,value:f},{type:b,tag:al,props:{id:by},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E5%9B%BA%E5%AE%9A%E6%A9%9F%E8%83%BD%E3%83%91%E3%82%A4%E3%83%97%E3%83%A9%E3%82%A4%E3%83%B3",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:b,tag:F,props:{},children:[{type:a,value:by}]}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"単純な命令ですぐに描画を行うことができる。OpenGLにおけるHello World的なところに到達するまでのコストは低く、はじめやすい。"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"多くの部分がプログラマブルシェーダーを用いる場合と比較して抽象化されOpenGL内部に隠されている。プログラマが細かい制御をいじることが出来ない。"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"OpenGLが実際に内部で何をやっているのかわかりにくく、パフォーマンスチューニング可能な範囲や柔軟性などに限界がある。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:al,props:{id:bz},children:[{type:b,tag:h,props:{ariaHidden:q,href:"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%96%E3%83%AB%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC",tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:b,tag:F,props:{},children:[{type:a,value:bz}]}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"Hello Worldまでの学習コストが固定機能パイプラインと比較して高い。少し描画を行うだけでもGLSLと呼ばれるシェーダー言語を記述する必要がある。"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"抽象度が固定機能パイプラインと比較して低く、細かい命令をプログラマがOpenGLに与えなければならない。"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"シェーダーを用いると固定機能パイプラインでは殆ど固定されていたGPU内部でのレンダリングパイプラインの処理をプログラマが設計し記述することができる。[^5]"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"非常に柔軟性が高く表現の幅が広い。また、適切に記述すれば効率的な処理を作ることができる。"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"プログラマブルシェーダーを用いたコアプロファイルのレンダリングパイプラインは学習コストが若干高いですが、現在推奨される方法であり、実際にGPUを用いたレンダリングで何をやっているのかの概要を理解するにもうってつけのものになっているため、今回の記事シリーズではコアプロファイルを採用してやっていきます。[^6]"}]}]},dir:aL,path:"\u002Farticles\u002Fseries-opengl\u002Fopengl-2",extension:Y,createdAt:aM,updatedAt:Q},{slug:"opengl-1",description:P,title:"OpenGL入門から3DCGレンダラ実装まで その1",series:P,seriesIndex:bc,tags:[as],toc:[{id:C,depth:B,text:C},{id:aN,depth:B,text:aN},{id:aO,depth:B,text:aO},{id:bA,depth:B,text:bB}],body:{type:W,children:[{type:b,tag:E,props:{id:C},children:[{type:b,tag:h,props:{href:at,ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:C}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:av}]},{type:a,value:f},{type:b,tag:E,props:{id:aN},children:[{type:b,tag:h,props:{href:"#%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aN}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"ベクトル、内積\u002F外積、行列、線形写像、アフィン写像など線形代数に関わる諸知識"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"基礎的な C++知識"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"基礎的な Linux 上での開発知識"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"それぞれの概念への解説は行いませんが、どんな処理をしているのかは説明しますので、詳細は分からなくても読むことはできます。というか僕が完全には理解できていません。"}]},{type:a,value:f},{type:b,tag:E,props:{id:aO},children:[{type:b,tag:h,props:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E7%92%B0%E5%A2%83",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aO}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"Arch Linux x86_64 (linux 5.4.2.arch1-1)"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"OpenGL 4.6.0 (NVIDIA 440.36)"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"gcc 9.2.0"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{id:bA},children:[{type:b,tag:h,props:{href:"#%E5%86%85%E5%AE%B9%E7%9B%AE%E6%A8%99",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:bB}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"このシリーズは 4 本立てで、以下の順で簡易的なライティングを施したボックスが表示できるところまでを実装します。"}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:bC,props:{},children:[{type:b,tag:bD,props:{},children:[{type:b,tag:T,props:{},children:[{type:b,tag:aw,props:{},children:[{type:a,value:"記事"}]},{type:b,tag:aw,props:{},children:[{type:a,value:"内容"}]}]}]},{type:b,tag:bE,props:{},children:[{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:"その 1"}]},{type:b,tag:D,props:{},children:[{type:a,value:"OpenGL 入門からウィンドウ表示"}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:"その 2"}]},{type:b,tag:D,props:{},children:[{type:a,value:"平面ポリゴン表示から GLSL シェーダとテクスチャマッピング"}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:"その 3"}]},{type:b,tag:D,props:{},children:[{type:a,value:"立方体ポリゴンの表示と回転・移動"}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:"その 4"}]},{type:b,tag:D,props:{},children:[{type:a,value:"簡易的なライティングの実装"}]}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"今回は初回ということで、そもそも OpenGL とはなんぞや、OpenGL を使った開発ではどんなものを使うのか、周辺ライブラリは何があるのか？などについての情報を整理してみようと思います。また、次回から本格的な実装を始めるための環境構築も今回行います。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"また、ソースコードやリソースなどを各回の内容ごとに纏めたものを GitHub に公開していますので、記事と並べて見ていただくとわかりやすいかと思います。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"今回の内容のソースは"},{type:b,tag:h,props:{href:"https:\u002F\u002Fgithub.com\u002Fstrvworks\u002Fadvent_gl\u002Ftree\u002Fmaster\u002F1",rel:[x,y,z],target:A},children:[{type:a,value:"こちら"}]},{type:a,value:"です。"}]}]},dir:aL,path:"\u002Farticles\u002Fseries-opengl\u002Fopengl-1",extension:Y,createdAt:aM,updatedAt:Q},{slug:"opengl-4",description:P,title:"OpenGL入門から3DCGレンダラ実装まで その4",series:P,seriesIndex:4,tags:[as],toc:[{id:aP,depth:B,text:aP},{id:bF,depth:B,text:bG},{id:bH,depth:B,text:bI},{id:aQ,depth:B,text:aQ}],body:{type:W,children:[{type:b,tag:ak,props:{id:bJ},children:[{type:b,tag:h,props:{href:"#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:bJ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"やっとc++のコードを書くことができます。ここでは、これからレンダラとなっていくソフトウェアのベースであるウィンドウ表示をやってみます。\nはじめに今回利用するコードの全文を載せておきます。このコードは作業ディレクトリの直下に"},{type:b,tag:m,props:{},children:[{type:a,value:bK}]},{type:a,value:"という名前で作成します。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:bK}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bL}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bM}]}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bN}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:"\u003Ciostream\u003E"}]}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bd}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bO}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" WINDOW_WIDTH "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"1440"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bd}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bO}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:" WINDOW_HEIGHT "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"810"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:be}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"GLFWwindow"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"main"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bX}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:b$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,ca]},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,cc,cd]},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ce}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cf}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:cg}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ch}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ck}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:be}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cl},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:co},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cs}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cu}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cw}]},{type:a,value:cx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:cy},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:cA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"まだ真っ黒なウィンドウを出すだと言うのに、それなりのコード量がありますね。一つづつ見ていきましょう。"}]},{type:a,value:f},{type:b,tag:E,props:{id:aP},children:[{type:b,tag:h,props:{href:"#%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%AF%E3%83%AB%E3%83%BC%E3%83%89",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aP}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"以下の部分です。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"main.cpp(ライブラリインクルード部)"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bL}]}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bM}]}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,ad,ae]},children:[{type:b,tag:c,props:{className:[d,af]},children:[{type:a,value:ag}]},{type:b,tag:c,props:{className:[d,ah,j]},children:[{type:a,value:ai}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bN}]}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"「いや、流石にそんな事知っているしみればわかるが」と思われたかもしれませんが、実は注意が必要です。\ngladは自分よりも前にOpenGLを扱う(具体的にはgl.hをインクルードする)ライブラリが存在することを許さないため、基本的にgladを一番始めにインクルードしなければなりません。この順序を変えるとビルドが通らなくなります"},{type:b,tag:aB,props:{id:"fnref-formatter"},children:[{type:b,tag:h,props:{href:"#fn-formatter",className:[aC]},children:[{type:a,value:"formatter"}]}]},{type:a,value:cC}]},{type:a,value:f},{type:b,tag:E,props:{id:bF},children:[{type:b,tag:h,props:{href:"#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%82%B3%E3%83%B3%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%92%E4%BD%9C%E6%88%90",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:bG}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"まずは以下の箇所です。ここはOSやディスプレイサーバーに合ったウィンドウの作成と、これからOpenGLで操作していくコンテキストを作成している部分になります。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"main.cpp(ウィンドウ\u002Fコンテキスト作成部)"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:a,value:bn},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bg}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bh},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bi},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bP},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:_}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bk},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:bR},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:a,value:bS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:bU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:bV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ay}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:bX}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bl}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bY}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:b_},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"まず"},{type:b,tag:m,props:{},children:[{type:a,value:cD}]},{type:a,value:"という関数を呼んでいます。これはほぼすべてのGLFWの関数を呼ぶ前に呼んでおく必要のある関数"},{type:b,tag:aB,props:{id:"fnref-glfwinit"},children:[{type:b,tag:h,props:{href:"#fn-glfwinit",className:[aC]},children:[{type:a,value:bg}]}]},{type:a,value:"で、GLFWの初期化処理を行います。この初期化処理では実行されたコンピュータの環境をチェックし、利用可能なOpenGLの機能やキーボードやマウスなど入出力装置の取得、モニタの認識など重要な作業が行なわれます。GLFWを使えば、クロスプラットフォームで動くこれらの処理をこの1行でやってくれてしまうのです。最高ですね。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"続いて"},{type:b,tag:m,props:{},children:[{type:a,value:"glfwWindowHint()"}]},{type:a,value:"というのが何やらやっています。これは、GLFWで実際にウィンドウを作成する前に、これから作るウィンドウやそれに関連付けられるコンテキストの設定をGLFWに教えてあげる関数です。設定項目は"},{type:b,tag:h,props:{href:"https:\u002F\u002Fwww.glfw.org\u002Fdocs\u002Flatest\u002Fwindow_guide.html#window_hints",rel:[x,y,z],target:A},children:[{type:a,value:cE}]},{type:a,value:"に一覧がありますが、もちろんすべてを設定する必要はありません。いくつかの必要な情報を選び取って設定します。今回は以下のような設定を行いました。"}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:bC,props:{},children:[{type:b,tag:bD,props:{},children:[{type:b,tag:T,props:{},children:[{type:b,tag:aw,props:{},children:[{type:a,value:"設定項目"}]},{type:b,tag:aw,props:{},children:[{type:a,value:"意味"}]},{type:b,tag:aw,props:{},children:[{type:a,value:"今回の設定値"}]}]}]},{type:b,tag:bE,props:{},children:[{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:bh}]},{type:b,tag:D,props:{},children:[{type:a,value:"利用するOpenGLの最大バージョン"}]},{type:b,tag:D,props:{},children:[{type:a,value:ap}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:bi}]},{type:b,tag:D,props:{},children:[{type:a,value:"利用するOpenGLの最小バージョン"}]},{type:b,tag:D,props:{},children:[{type:a,value:ap}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:bj}]},{type:b,tag:D,props:{},children:[{type:a,value:"利用するOpenGLプロファイル。"},{type:b,tag:m,props:{},children:[{type:a,value:"GLFW_OPENGL_FORWARD_COMPAT"}]},{type:a,value:"(互換プロファイル)と"},{type:b,tag:m,props:{},children:[{type:a,value:cF}]},{type:a,value:"(コアプロファイル)が指定可能。"}]},{type:b,tag:D,props:{},children:[{type:a,value:cF}]}]},{type:b,tag:T,props:{},children:[{type:b,tag:D,props:{},children:[{type:a,value:bk}]},{type:b,tag:D,props:{},children:[{type:a,value:"作成するウィンドウのサイズ変更が外部から可能かどうか。"},{type:b,tag:m,props:{},children:[{type:a,value:cG}]},{type:a,value:"か"},{type:b,tag:m,props:{},children:[{type:a,value:bo}]},{type:a,value:"を設定可能。"},{type:b,tag:aB,props:{id:"fnref-windowsize"},children:[{type:b,tag:h,props:{href:"#fn-windowsize",className:[aC]},children:[{type:a,value:"windowSize"}]}]}]},{type:b,tag:D,props:{},children:[{type:a,value:bo}]}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"これらの設定を行なった上で、満を持して"},{type:b,tag:m,props:{},children:[{type:a,value:"glfwCreateWindow()"}]},{type:a,value:"でウィンドウとそれに紐づけられるコンテキストを作成します。ここではウィンドウサイズやウィンドウタイトルなどを設定しています。"},{type:b,tag:m,props:{},children:[{type:a,value:ay}]},{type:a,value:"になっている部分は関連付けるウィンドウや対象とするモニタなどを設定できるのですが、今回は特に必要ないため指定していません。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"これでOSやディスプレイサーバーに合ったウィンドウ\u002Fコンテキストを作成することが出来ました。しかし、まだこれではコンテキストが作成されただけで、これからこれを利用する設定は出来ていません。それを行うのが"},{type:b,tag:m,props:{},children:[{type:a,value:"glfwMakeContextCurrent()"}]},{type:a,value:"です。これが呼び出されると、呼び出し元のスレッドに渡されたウィンドウが持つコンテキストが関連付けられます。今回の開発ではそこまでやりませんが、複数のコンテキストを扱う場合などにはこういった関数を各所で呼び出してコンテキストの取り回しを行うようです。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"最後に、"},{type:b,tag:m,props:{},children:[{type:a,value:cH}]},{type:a,value:"で作製したウィンドウに対する入力をハンドリングするコールバック関数を設定しています。　このコールバック関数は以下です。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"main.cpp(keyHandler関数)"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:be}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:bf}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cl},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cm},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cn},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:co},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:H}]},{type:a,value:cp},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cq}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cr},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cs}]},{type:a,value:ct},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cu}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:cv},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cw}]},{type:a,value:cx},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:cy},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cz}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:cA},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:cB}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"大変単純ですね。コールバック引数として受けとった値を元に、エスケープキーが押されたら"},{type:b,tag:m,props:{},children:[{type:a,value:"glfwSetWindowShouldClose()"}]},{type:a,value:"を呼び出しています。この関数に"},{type:b,tag:m,props:{},children:[{type:a,value:cG}]},{type:a,value:"をセットすると、対象のウィンドウにクローズのフラグ立ちます。このフラグにはウィンドウのオブジェクトを通して他の場所からアクセスできるため、このフラグを監視することでウィンドウの終了処理を書くことが出来ます。\nもちろんこのハンドラはあらゆるキー入力に反応するので、ケースを増やすことで様々なキー入力に対応することができます。GLFWで定義されているキーの一覧は"},{type:b,tag:h,props:{href:bp,rel:[x,y,z],target:A},children:[{type:a,value:cE}]},{type:a,value:"にあります"},{type:b,tag:aB,props:{id:"fnref-closeinput"},children:[{type:b,tag:h,props:{href:"#fn-closeinput",className:[aC]},children:[{type:a,value:"closeInput"}]}]},{type:a,value:cC}]},{type:a,value:f},{type:b,tag:E,props:{id:bH},children:[{type:b,tag:h,props:{href:"#opengl%E9%96%A2%E6%95%B0%E3%81%AE%E3%83%AD%E3%83%BC%E3%83%89",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:bI}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"いよいよOpenGL関数のロード処理です。これは以下の部分で行なっています。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"main.cpp(OpenGL関数のロード部)"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:b$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,ca]},children:[{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cb}]},{type:b,tag:c,props:{className:[d,cc,cd]},children:[{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ce}]},{type:a,value:bm},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:cf}]}]}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:cg}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ab}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,$,e]},children:[{type:a,value:aa}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aA}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aV}]},{type:b,tag:c,props:{className:[d,S]},children:[{type:a,value:aW}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"ちょっと不思議なコードに感じないでしょうか。"},{type:b,tag:m,props:{},children:[{type:a,value:ar}]},{type:a,value:"と言うのに違和感があるかと思います。お察しの通りこれはGLFWの関数で、それを"},{type:b,tag:m,props:{},children:[{type:a,value:bm}]},{type:a,value:"という型に無理やりキャストした上でgladの"},{type:b,tag:m,props:{},children:[{type:a,value:"gladLoadGLLoader()"}]},{type:a,value:"という関数に渡しています。ライブラリをまたいでいるし、なんだかよくわかりません。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"実は、"},{type:b,tag:m,props:{},children:[{type:a,value:ar}]},{type:a,value:"というのは以下のような文字列を受け取る関数です。この文字列はOpenGLの特定の機能を指し示す固有の文字列で、この関数は渡された文字列に該当する機能の関数があればその関数のポインタを返すという動作をします。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"GLFWglproc "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ar}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:bd}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"char"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ao}]},{type:a,value:" procname"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"そして、gladはOpenGLの関数や拡張機能をロードするライブラリで、特に自分が使いたいものだけを選んで生成した上で利用することができるものでした。そう、ここでgladに"},{type:b,tag:m,props:{},children:[{type:a,value:ar}]},{type:a,value:"を渡すことで、glad内部で読み込むことになっている機能名を片っ端からこれに突っ込んで、OpenGLの関数をロードしているのです。つまりは、"},{type:b,tag:m,props:{},children:[{type:a,value:"GLFWglproc"}]},{type:a,value:"とかいうやつにOpenGLの関数ポインタが入って返ってくるということですね。これを踏まえて読めば納得のコードです。"}]},{type:a,value:f},{type:b,tag:E,props:{id:aQ},children:[{type:b,tag:h,props:{href:"#%E3%83%A1%E3%82%A4%E3%83%B3%E5%87%A6%E7%90%86%E3%83%AB%E3%83%BC%E3%83%97",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aQ}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"いよいよメインの処理ループの部分です。以下のコードが該当します。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"main.cpp(メイン処理ループ部)"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:a,value:bn},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:ch}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:aq}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ci}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cj}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ck}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:v},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"過去最高級にシンプルです。\nまず、このループは"},{type:b,tag:m,props:{},children:[{type:a,value:"glfwWindowShouldClose()"}]},{type:a,value:"の返す値が"},{type:b,tag:m,props:{},children:[{type:a,value:bo}]},{type:a,value:"である間だけ回り続けます。似たような関数名を先程見ましたね。これは渡されたウィンドウに存在するクローズのフラグの状態を取得する関数です。つまり、先程設定したコールバック内でエスケープキーが押されるとフラグが立ち、このループが終了するということになります。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"内部では"},{type:b,tag:m,props:{},children:[{type:a,value:cI}]},{type:a,value:bv},{type:b,tag:m,props:{},children:[{type:a,value:cJ}]},{type:a,value:"というのを呼んでいます。"},{type:b,tag:m,props:{},children:[{type:a,value:cI}]},{type:a,value:"は今説明すると話がややこしくなるので次回以降に取っておきます。\n"},{type:b,tag:m,props:{},children:[{type:a,value:cJ}]},{type:a,value:"の方は、現在GLFWがイベントキューに受け取っているイベントを元に、設定された各種コールバックの呼び出しなどを行う関数です。ループ内で繰り返し呼び出され、新たにキューに入ってきたイベントがあれば処理を行い、キューから取り出すということをやっています。\nこれを呼び出さないと先程"},{type:b,tag:m,props:{},children:[{type:a,value:cH}]},{type:a,value:"で設定した関数は永遠に呼び出されず、キー入力をハンドリングすることはできません。気をつけましょう。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:cK},children:[{type:b,tag:h,props:{href:"#%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:cK}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"さて、準備は整いました。ウィンドウを表示するコードも書いたし、ビルド環境も作りました。以下の手順でビルドが可能です。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"まず。作業ディレクトリ直下に"},{type:b,tag:m,props:{},children:[{type:a,value:"build"}]},{type:a,value:"というディレクトリを作成し、その中に移動します"},{type:b,tag:aB,props:{id:"fnref-outofsource"},children:[{type:b,tag:h,props:{href:"#fn-outofsource",className:[aC]},children:[{type:a,value:"outOfSource"}]}]},{type:a,value:"。この時点で以下のような状態になっているはずです。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"作業ディレクトリの状態"}]},{type:b,tag:J,props:{className:[K,aD]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"advent_ogl\u002F\n├── build\u002F ←いまここにいる\n├── CMakeLists.txt\n├── glad\u002F\n│   ├── CMakeLists.txt\n│   ├── include\u002F\n│   └── src\u002F\n└── main.cpp\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"そこで以下の順にコマンドを実行します。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"ビルドから実行まで"}]},{type:b,tag:J,props:{className:[K,"language-shell"]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"$ cmake "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:".."}]},{type:a,value:"\n$ "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:cL}]},{type:a,value:"\n$ .\u002Fadvent_gl\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"すると、以下のように真っ黒な画面が表示されるはずです！"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:aK,props:{alt:"DeepinScreenshot_select-area_20191219024326.png",src:"https:\u002F\u002Fqiita-image-store.s3.ap-northeast-1.amazonaws.com\u002F0\u002F225893\u002Fd8f2bd07-e11b-119c-15bf-1191245b5d36.png"},children:[]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"表示された方、やりました！我々の勝利です！されなかった方、残念です。何かわからないことがあれば聞いてください。僕もわからないかもしれません。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"一応、先程入力したコマンドについて説明しておきます。\nはじめの"},{type:b,tag:m,props:{},children:[{type:a,value:"cmake .."}]},{type:a,value:"というのは、作業ディレクトリ直下に作成したメインの"},{type:b,tag:m,props:{},children:[{type:a,value:"CMakeLists.txt"}]},{type:a,value:"に対するCMakeの処理を走らせているコマンドです。これにより、記述された設定内容に従って"},{type:b,tag:m,props:{},children:[{type:a,value:bq}]},{type:a,value:"などが生成されます。\n2つ目のコマンドは生成された"},{type:b,tag:m,props:{},children:[{type:a,value:bq}]},{type:a,value:"に対する処理です。CMakeがビルドのための"},{type:b,tag:m,props:{},children:[{type:a,value:bq}]},{type:a,value:"を生成してくれたので、使うだけです。これを実行すると、同じディレクトリに"},{type:b,tag:m,props:{},children:[{type:a,value:"advent_gl"}]},{type:a,value:"という名前の実行バイナリが出来上がるはずです。\n3つ目は説明不要ですね。実行しただけです。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:cM},children:[{type:b,tag:h,props:{href:"#%E3%81%BE%E3%81%A8%E3%82%81",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:cM}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"さて、周辺知識から長々とやってきましたが、まだウィンドウを表示しただけで、OpenGL的にはHelloWorldにも到達できていません。\n次回からはいよいよレンダラの実装をやっていきます。はやくHelloWorldしたいですね。今回の内容でOpenGLのイメージや周辺状況を掴んでいただけていたら嬉しいです。僕も大変勉強になりました。\nOpenGL、わくわくしますね。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:cN},children:[{type:b,tag:h,props:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:cN}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"この記事の執筆にあたって、以下のページを参考にさせていだきました。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"”Khronos OpenGL® Registry” Khronos Group. "},{type:b,tag:h,props:{href:cO,rel:[x,y,z],target:A},children:[{type:a,value:cO}]},{type:a,value:"\n\"Rendering Pipeline Overview\"\nOpenGL Wiki.  "},{type:b,tag:h,props:{href:cP,rel:[x,y,z],target:A},children:[{type:a,value:cP}]},{type:a,value:"\n\"Fixed Function Pipeline\" OpenGL Wiki. "},{type:b,tag:h,props:{href:cQ,rel:[x,y,z],target:A},children:[{type:a,value:cQ}]},{type:a,value:"\n\"OpenGL Context\" OpenGL Wiki. "},{type:b,tag:h,props:{href:cR,rel:[x,y,z],target:A},children:[{type:a,value:cR}]},{type:a,value:"\n\"OpenGL\" LEARN OpenGL. "},{type:b,tag:h,props:{href:cS,rel:[x,y,z],target:A},children:[{type:a,value:cS}]},{type:a,value:"\n”Load OpenGL Functions”　OpenGL Wiki. "},{type:b,tag:h,props:{href:cT,rel:[x,y,z],target:A},children:[{type:a,value:cT}]},{type:a,value:"\n\"OpenGL Loading Library\" OpenGL Wiki. "},{type:b,tag:h,props:{href:cU,rel:[x,y,z],target:A},children:[{type:a,value:cU}]},{type:a,value:"\n\"Related toolkits and APIs\" OpenGL Wiki. "},{type:b,tag:h,props:{href:cV,rel:[x,y,z],target:A},children:[{type:a,value:cV}]},{type:a,value:"\n”The OpenGL Extension Wrangler Library” glew. "},{type:b,tag:h,props:{href:aX,rel:[x,y,z],target:A},children:[{type:a,value:aX}]},{type:a,value:"\n\"FreeGlut\" wikipedia "},{type:b,tag:h,props:{href:cW,rel:[x,y,z],target:A},children:[{type:a,value:cW}]},{type:a,value:"\n\"GLEW\" wikipedia "},{type:b,tag:h,props:{href:cX,rel:[x,y,z],target:A},children:[{type:a,value:cX}]},{type:a,value:"\n\"GLFW: Window Reference\" GLFW. "},{type:b,tag:h,props:{href:cY,rel:[x,y,z],target:A},children:[{type:a,value:cY}]},{type:a,value:"\n”GLFW: Window guide” GLFW.  "},{type:b,tag:h,props:{href:cZ,rel:[x,y,z],target:A},children:[{type:a,value:cZ}]},{type:a,value:"\n”GLFW: Keyboard keys” GLFW. "},{type:b,tag:h,props:{href:bp,rel:[x,y,z],target:A},children:[{type:a,value:bp}]}]},{type:a,value:f},{type:b,tag:G,props:{className:["footnotes"]},children:[{type:a,value:f},{type:b,tag:"hr",props:{},children:[]},{type:a,value:f},{type:b,tag:"ol",props:{},children:[{type:a,value:f},{type:b,tag:w,props:{id:"fn-formatter"},children:[{type:a,value:"「綺麗なコードを保持するためにLinterとFormatterを使う」という人は結構いると思いますが、多くのc++のFormatterは、インクルード順序に依存するお行儀の悪いヘッダを前提にしていません(この場合仕方ないですが……)。Formatterにソースを破壊されないように気をつけましょう。"},{type:b,tag:h,props:{href:"#fnref-formatter",className:[aE]},children:[{type:a,value:aF}]}]},{type:a,value:f},{type:b,tag:w,props:{id:"fn-glfwinit"},children:[{type:b,tag:m,props:{},children:[{type:a,value:cD}]},{type:a,value:"を呼ぶ前に呼び出せる関数としては、GLFWのバージョンを取得する関数や、GLFWで発生したエラーをハンドリングするコールバック関数の設定などがあります。"},{type:b,tag:h,props:{href:"#fnref-glfwinit",className:[aE]},children:[{type:a,value:aF}]}]},{type:a,value:f},{type:b,tag:w,props:{id:"fn-windowsize"},children:[{type:a,value:"今回これをわざわざ設定したのは、僕が開発環境にタイル型wmを採用しており、これを設定しないと起動時に勝手に変なサイズに変形させられてしうからです。これを設定することでfloatモードでウィンドウが表示されます。これを探すのにちょっと時間かかった。"},{type:b,tag:h,props:{href:"#fnref-windowsize",className:[aE]},children:[{type:a,value:aF}]}]},{type:a,value:f},{type:b,tag:w,props:{id:"fn-closeinput"},children:[{type:a,value:"なお、終了処理を記述し忘れるとタスクを外部から殺さなければ絶対に閉じられない無限ループ高負荷ウィンドウが生成されます。"},{type:b,tag:h,props:{href:"#fnref-closeinput",className:[aE]},children:[{type:a,value:aF}]}]},{type:a,value:f},{type:b,tag:w,props:{id:"fn-outofsource"},children:[{type:a,value:"こういった、ビルド用のディレクトリを分けてビルドを行う手順のことを"},{type:b,tag:F,props:{},children:[{type:a,value:"out-of-sourceビルド"}]},{type:a,value:"と言ったりします。ビルドの生成物とソースを完全に分離可能であるため大変取り回しが良いです。"},{type:b,tag:h,props:{href:"#fnref-outofsource",className:[aE]},children:[{type:a,value:aF}]}]},{type:a,value:f}]},{type:a,value:f}]}]},dir:aL,path:"\u002Farticles\u002Fseries-opengl\u002Fopengl-4",extension:Y,createdAt:aM,updatedAt:Q},{slug:"opengl-3",description:P,title:"OpenGL入門から3DCGレンダラ実装まで その3",series:P,seriesIndex:U,tags:[as],toc:[{id:aY,depth:B,text:aY},{id:c_,depth:U,text:c$},{id:da,depth:U,text:db},{id:aZ,depth:B,text:aZ},{id:dc,depth:U,text:dd},{id:a_,depth:U,text:a_},{id:de,depth:U,text:df},{id:a$,depth:B,text:a$},{id:dg,depth:U,text:dh}],body:{type:W,children:[{type:b,tag:E,props:{id:aY},children:[{type:b,tag:h,props:{href:"#%E8%A3%9C%E5%8A%A9%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aY}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"ここまでOpenGLについて記述してきましたが、OpenGLがハードウェアやOSと近いものである特性上、ライブラリとしての取り扱いも特殊な箇所があります。直接的にプラットフォーム間の環境の差異を受けるため、OpenGLを用いたプログラミングでは本来プラットフォーム固有の実装を記述する必要があります。\nしかし、これはかなり面倒なことですし、情報共有やクロスプラットフォーム性と言った面でも非常に効率が悪くなります。そこで、OpenGLにはいくつかの領域において補助ライブラリが存在します。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"これは公式の仕様によるものではありませんが、一般的に広く使われており、公式もこういった補助ライブラリの利用を強く推奨しています。とはいえ、決してOpenGLを簡単な描画ライブラリとしてラップするような性質のものではなく、様々な種類があるOSやGPUを”GPUを使って描画や処理を行う環境”として抽象化してくれるに過ぎないという点には注意が必要です。"}]},{type:a,value:f},{type:b,tag:X,props:{id:c_},children:[{type:b,tag:h,props:{href:"#opengl-load-library",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:c$}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"一般的なC\u002FC++のライブラリであれば、そのライブラリのヘッダをインクルードし、適切にリンカが参照を解決できるように設定すればライブラリの関数を利用することができます。\nしかし、OpenGLはそれでは利用できません。これはプラットフォームによってOSやハードウェアの実行可能な命令が異なることに由来しているようで、OpenGLは実行時に利用する関数のポインタを生成し、変数に割り当てることで呼び出し可能オブジェクトの作成を行います。本来、プログラマはこの初期化処理を実装しないとOpenGLの関数を使うことすらできません。更に、このロード処理自体もプラットフォームによって異なる実装が必要となります。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"これらは**OpenGL ロードライブラリ(OpenGL Loading Library)**と呼ばれる部類の補助ライブラリを利用することで自動化することが可能で、クロスプラットフォーム対応も容易となります。\n以下に、いくつかの主要なOpenGLロードライブラリを紹介します。"}]},{type:a,value:f},{type:b,tag:al,props:{id:"glewopengl-extension-wrangler"},children:[{type:b,tag:h,props:{href:"#glewopengl-extension-wrangler",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:"GLEW（OpenGL Extension Wrangler）"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:ba},{type:b,tag:h,props:{href:aX,rel:[x,y,z],target:A},children:[{type:a,value:aX}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Windows, Linux, Mac OS X, FreeBSD, Irix, Solarisなど多くのプラットフォームをサポートするOpenGLロードライブラリです。\nインクルードして以下のように初期化関数を呼び出すことで、そのプラットフォームで利用可能なOpenGLの関数を読み込んで利用可能にすることができます。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:c,props:{className:[V]},children:[{type:a,value:"Example"}]},{type:b,tag:J,props:{className:[K,Z]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"GLenum err "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ax}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"glewInit"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aj}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"GLEW_OK "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:"!="}]},{type:a,value:" err"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:M}]},{type:a,value:di},{type:b,tag:c,props:{className:[d,"comment"]},children:[{type:a,value:"\u002F* 初期化に失敗した場合の処理 *\u002F"}]},{type:a,value:di},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"fprintf"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:b,tag:c,props:{className:[d,"constant"]},children:[{type:a,value:"stderr"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,L]},children:[{type:a,value:"\"Error: %s\\n\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:u}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"glewGetErrorString"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"err"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:O}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:al,props:{id:"glad-multi-language-vulkanglgleseglglxwgl-loader-generator"},children:[{type:b,tag:h,props:{href:"#glad-multi-language-vulkanglgleseglglxwgl-loader-generator",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:"glad (Multi-Language Vulkan\u002FGL\u002FGLES\u002FEGL\u002FGLX\u002FWGL Loader-Generator)"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:ba},{type:b,tag:h,props:{href:dj,rel:[x,y,z],target:A},children:[{type:a,value:dj}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"多言語対応のロードライブラリ"},{type:b,tag:F,props:{},children:[{type:a,value:"ジェネレータ"}]},{type:a,value:"です。ジェネレータというのはどういうことかと言うと、利用したい機能やプロファイル、APIバージョンなどを指定することで、使いたい機能のみを含んだロードライブラリを生成できるバックエンドであるということです。\nこのバックエンドのインターフェースはコマンドラインやWebサービスなど複数用意されており、利用したい手段を選んでローダーを生成することができます。\n以下の画像はgladのWebインターフェースで、各設定を簡単に選択できるようになっていることがわかります。\n"},{type:b,tag:aK,props:{alt:"DeepinScreenshot_select-area_20191216071639.png",src:"https:\u002F\u002Fqiita-image-store.s3.ap-northeast-1.amazonaws.com\u002F0\u002F225893\u002F0ac6b6d5-88d0-cf63-83d4-1d07715b90b0.png"},children:[]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"必要なものだけを選んでライブラリを生成することができるため、GLEWと比較してライブラリサイズが小さく軽量です。また、C\u002FC++以外の言語やOpenGL以外のGL系インターフェースへの対応も行なわれているため、そういった利用の場合にも便利です。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"今回の実装ではgladを利用します。"}]},{type:a,value:f},{type:b,tag:X,props:{id:da},children:[{type:b,tag:h,props:{href:"#contextwindow-toolkits-library",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:db}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"OpenGLはコンテキストを対象としてGPUを利用した処理を記述することができますが、コンテキスト自体の作成や、出来上がった画像をウィンドウとして画面に表示したりするところはサポートしてくれません。コンテキストの作成やウィンドウ表示\u002F管理、入出力などはOS固有の手法が必要とされるため、この部分でも補助ライブラリを利用することが推奨されています。"}]},{type:a,value:f},{type:b,tag:al,props:{id:dk},children:[{type:b,tag:h,props:{href:"#freeglut",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:dk}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:ba},{type:b,tag:h,props:{href:dl,rel:[x,y,z],target:A},children:[{type:a,value:dl}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"過去に主流だったGLUTというライブラリの後継で、ウィンドウ管理やキーボード\u002Fマウス入力などに対するサポートが含まれています。OpenGLコンテキストの生成にも対応しています。GLUTの後継であるというポリシーから、GLUTのインターフェースをあまり変えないように設計されています。GLUTから遡るとOpenGL自体と同じくらい歴史があり、情報が比較的豊富なようです。"}]},{type:a,value:f},{type:b,tag:al,props:{id:"glfw"},children:[{type:b,tag:h,props:{href:"#glfw",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:dm}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:ba},{type:b,tag:h,props:{href:dn,rel:[x,y,z],target:A},children:[{type:a,value:dn}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"GLUTよりも新しく、GLUTなど他のライブラリでの経験を踏まえて設計されています。Linux, macOS, Microsoft Windows, FreeBSD, NetBSD, OpenBSDに対応し、頻繁にアップデートされています。マウス\u002Fキーボードに加えてジョイスティック入力へのサポートなども存在しています。\nfreeglutと比較してコンテキスト作成により詳細な属性設定が可能であったり、イベントループの扱いの違いによってより低レイテンシな入力処理対応が可能であったりするようです。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"今回の実装ではGLFWを利用します。"}]},{type:a,value:f},{type:b,tag:ak,props:{id:do0},children:[{type:b,tag:h,props:{href:"#%E7%92%B0%E5%A2%83%E6%A7%8B%E7%AF%89",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:do0}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"さて、説明も終わって早速実装と行きたいところですが、まずは環境を作らなければなりません。以下では、今回使用するものについて簡単に触れます。"}]},{type:a,value:f},{type:b,tag:E,props:{id:aZ},children:[{type:b,tag:h,props:{href:"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%82%82%E3%81%AE",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:aZ}]},{type:a,value:f},{type:b,tag:X,props:{id:dc},children:[{type:b,tag:h,props:{href:"#opengl%E6%9C%AC%E4%BD%93",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:dd}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"だいたい入ってるんじゃないかと思いますが、お使いの環境で利用可能な実装をインストールしてください。僕は今回NVIDIAのプロプライエタリドライバに含まれているOpenGL 4.6の実装を利用しています。古いデバイスをお使いの場合4.6が利用できない可能性がありますが、今回の記事では最新の拡張などは利用しないので3.x以上であれば問題ないと思われます。"}]},{type:a,value:f},{type:b,tag:X,props:{id:a_},children:[{type:b,tag:h,props:{href:"#%E8%A3%9C%E5%8A%A9%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E7%B3%BB",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:a_}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"以下のものを利用します。"}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"glad"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:dm}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"glm"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"上で説明した補助ライブラリに加えて、行列演算など数学系の処理を実装したライブラリであるglmも利用します。また、GLFWはご利用のディスプレイサーバに合ったものを選択するよう注意してください。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"GLFWとglmについては、僕はArch Linux公式のリポジトリからパッケージマネージャを用いてインストールしました。\ngladは各ディストロのリポジトリに存在しない可能性が高いためセットアップを説明します。\nまず、"},{type:b,tag:h,props:{href:"https:\u002F\u002Fglad.dav1d.de\u002F",rel:[x,y,z],target:A},children:[{type:a,value:"このサイト"}]},{type:a,value:"で以下のような設定を行なった上でGENERATEボタンを押すことで必要なものを含んだライブラリを生成することができます。プロファイルはコアプロファイルで固定ですが、OpenGLのバージョンについてはご自身の環境に合ったものを選択してください。僕と同じ環境で大丈夫な場合は、"},{type:b,tag:h,props:{href:"http:\u002F\u002Fglad.dav1d.de\u002F#profile=core&specification=gl&api=gl%3D4.6&api=gles1%3Dnone&api=gles2%3Dnone&api=glsc2%3Dnone&language=c&loader=on",rel:[x,y,z],target:A},children:[{type:a,value:"このパーマリンク"}]},{type:a,value:"から僕が生成したものと全く同じものにアクセスすることもできます。\n"},{type:b,tag:aK,props:{alt:"DeepinScreenshot_select-area_20191217222125.png",src:"https:\u002F\u002Fqiita-image-store.s3.ap-northeast-1.amazonaws.com\u002F0\u002F225893\u002F0c8ac0ee-e109-7f72-53ae-3121e334b339.png"},children:[]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"ファイルが生成されるとページが遷移し表示されるので、zipファイルをクリックしてダウンロードします。ダウンロードが完了したら、今回の開発で利用する作業ディレクトリをお好きなところに作成し、その直下にglad.zipを以下のように展開します。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,aD]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"advent_gl\u002F\n└── glad\u002F\n    ├── include\u002F\n    └── src\u002F\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"以上です。この配置を前提にこの後CMakeのセットアップなどを行います。"}]},{type:a,value:f},{type:b,tag:X,props:{id:de},children:[{type:b,tag:h,props:{href:"#%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E3%83%93%E3%83%AB%E3%83%89%E3%83%84%E3%83%BC%E3%83%AB%E7%B3%BB",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:df}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"適当に入れます。僕はArch Linux公式のリポジトリからパッケージマネージャを用いてインストールしました。今回の開発ではビルド等はCUIから行います。"}]},{type:a,value:f},{type:b,tag:am,props:{},children:[{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"CMake"}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:cL}]},{type:a,value:f},{type:b,tag:w,props:{},children:[{type:a,value:"gcc"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:E,props:{id:a$},children:[{type:b,tag:h,props:{href:"#%E3%83%93%E3%83%AB%E3%83%89%E7%92%B0%E5%A2%83%E3%81%AE%E4%BD%9C%E6%88%90",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:a$}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"今回はCMakeを用いたビルド環境で開発を行います。CMakeについての細かい解説は行いませんので、わからなければ適時調べてください。"}]},{type:a,value:f},{type:b,tag:X,props:{id:dg},children:[{type:b,tag:h,props:{href:"#cmakeliststxt%E3%81%AE%E4%BD%9C%E6%88%90",ariaHidden:q,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:dh}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"CMakeを用いたビルドを行うため、CMakeLists.txtを作製します。また、gladはプロジェクトと一緒にソースからビルドを行う必要があるため、サブディレクトリとして専用のCMakeLists.txtを用意します。作業ディレクトリ内の構成は以下のようになります。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,aD]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"advent_ogl\u002F\n├── CMakeLists.txt\n└── glad\u002F\n    ├── CMakeLists.txt\n    ├── include\u002F\n    └── src\u002F\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"追加した2つのCMakeLists.txtの内容は、以下に添付しておきます。このCMakeLists.txtは、作業ディレクトリ直下に配置されたmain.cppファイルを実行ファイルとしてビルドするように記述されています。"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"まずはメインとなる、プロジェクトビルド用のCMakeLists.txtです。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,aD]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"cmake_minimum_required(VERSION 3.12)\n\n# プロジェクト名の設定\nproject(advent_gl)\n\n# 必須ライブラリの存在チェック\nfind_package(glfw3 REQUIRED)\nfind_package(glm REQUIRED)\n\n# glad関係\ninclude_directories(glad\u002Finclude)\nadd_subdirectory(glad)\n\n# コンパイルオプション\nadd_compile_options(-O2 -Wall)\n\n# 実行ファイルの指定\nadd_executable(advent_gl main.cpp)\n\n# 実行ファイルにリンクするライブラリの指定\ntarget_link_libraries(advent_gl glad glfw glm ${CMAKE_DL_LIBS})\n\n# c++17を使う\nset_property(TARGET advent_gl PROPERTY CXX_STANDARD 17)\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"続いて、gladをライブラリとして認識させてリンクするためのCMakeLists.txtです。"}]},{type:a,value:f},{type:b,tag:G,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,aD]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"cmake_minimum_required(VERSION 3.12)\n\n# gladという名前でCMakeに認識させるライブラリを作成\n# 静的ライブラリとしてコンパイル。含まれるソースを指定。\nadd_library(glad STATIC\n    src\u002Fglad.c\n)\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"以上CMakeによるプロジェクトのセットアップです。大変シンプルですね。"}]}]},dir:aL,path:"\u002Farticles\u002Fseries-opengl\u002Fopengl-3",extension:Y,createdAt:aM,updatedAt:Q}],icon:as},{name:br,contents:[{slug:"example-2",description:P,title:"Example実装まで その2",series:br,seriesIndex:B,tags:[bs],toc:[{id:C,depth:B,text:C}],body:{type:W,children:[{type:b,tag:E,props:{id:C},children:[{type:b,tag:h,props:{ariaHidden:q,href:at,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:C}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:av}]}]},dir:dp,path:"\u002Farticles\u002Fseries-example\u002Fexample-2",extension:Y,createdAt:Q,updatedAt:Q},{slug:"example-1",description:P,title:"Exampleな記事 その1",series:br,seriesIndex:bc,tags:[bs],toc:[{id:C,depth:B,text:C}],body:{type:W,children:[{type:b,tag:E,props:{id:C},children:[{type:b,tag:h,props:{ariaHidden:q,href:at,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:C}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:av}]}]},dir:dp,path:"\u002Farticles\u002Fseries-example\u002Fexample-1",extension:Y,createdAt:Q,updatedAt:Q}],icon:bs},{name:bt,contents:[{slug:"sample-1",description:P,title:"Sampleまで その1",series:bt,seriesIndex:bc,tags:[bu],toc:[{id:C,depth:B,text:C}],body:{type:W,children:[{type:b,tag:E,props:{id:C},children:[{type:b,tag:h,props:{ariaHidden:q,href:at,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:C}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:av}]}]},dir:dq,path:"\u002Farticles\u002Fseries-sample\u002Fsample-1",extension:Y,createdAt:Q,updatedAt:Q},{slug:"sample-2",description:"Sample入門から3DCGレンダラ実装まで",title:"SampleSample実装まで その2",series:bt,seriesIndex:B,tags:[bu],toc:[{id:C,depth:B,text:C}],body:{type:W,children:[{type:b,tag:E,props:{id:C},children:[{type:b,tag:h,props:{ariaHidden:q,href:at,tabIndex:r},children:[{type:b,tag:c,props:{className:[s,t]},children:[]}]},{type:a,value:C}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:au}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:av}]}]},dir:dq,path:"\u002Farticles\u002Fseries-sample\u002Fsample-2",extension:Y,createdAt:Q,updatedAt:Q}],icon:bu}],completed:true}},mutations:void 0}}("text","element","span","token","punctuation","\n","p","a"," ","keyword","(",")","code",";","function","operator","true",-1,"icon","icon-link",",","\n    ","li","nofollow","noopener","noreferrer","_blank",2,"趣旨","td","h2","strong","div","int","nuxt-content-highlight","pre","line-numbers","string","{","window","}","OpenGL入門から3DCGレンダラ実装まで","2021-10-01T11:44:02.000Z","\n        ","number","tr",3,"filename","root","h3",".md","language-cpp","glfwWindowHint","double-colon","::","\u003C\u003C","\n            ","macro","property","directive-hash","#","directive","include","if","h1","h4","ul","\n\n","*","4","!","glfwGetProcAddress","OpenGL","#%E8%B6%A3%E6%97%A8","OpenGL や Direct X を始めとするグラフィックスライブラリに全く詳しくない(というかまともに触ったことがない)初心者が、勉強しながら作成する 3DCG レンダラを少しづつ解説していく記事です。4 本立てです。\nなんでこんなことをやろうと思ったかと言うと、趣味のゲーム制作で利用しているゲームエンジンへの理解をより深め、開発に活かしたいと考えたからです。この趣旨から、実装だけでなく文章も多い記事になっていくと思われます[^0]。","有識者の方、間違い等あれば指摘していただけると大変助かります。","th","=","nullptr","\n\n    ","return","sup","footnote-ref","language-text","footnote-backref","↩","概要","アーキテクチャ","コンテキスト","プロファイルとレンダリングパイプライン","img","\u002Farticles\u002Fseries-opengl","2021-09-22T07:31:56.000Z","前提知識","テスト環境","ライブラリのインクルード","メイン処理ループ","\n        std","cerr "," std","endl","-","1","http:\u002F\u002Fglew.sourceforge.net\u002F","補助ライブラリ","インストールするもの","補助ライブラリ系","ビルド環境の作成","公式ページ: ","互換プロファイル",1,"const","void","keyHandler","glfwInit","GLFW_CONTEXT_VERSION_MAJOR","GLFW_CONTEXT_VERSION_MINOR","GLFW_OPENGL_PROFILE","GLFW_RESIZABLE","glfwTerminate","GLADloadproc","    ","GLFW_FALSE","https:\u002F\u002Fwww.glfw.org\u002Fdocs\u002Flatest\u002Fgroup__keys.html","Makefile","Exampleなシリーズ","Unreal Engine","Sample series","C++","と","コアプロファイル","レンダリングパイプライン","固定機能パイプライン","プログラマブルシェーダー","内容目標","内容・目標","table","thead","tbody","ウィンドウコンテキストを作成","ウィンドウ\u002Fコンテキストを作成","opengl関数のロード","OpenGL関数のロード","ウィンドウを表示する","main.cpp","\u003Cglad\u002Fglad.h\u003E","\u003CGLFW\u002Fglfw3.h\u003E","\u003Cglm\u002Fglm.hpp\u003E","unsigned"," GLFW_OPENGL_CORE_PROFILE"," GLFW_FALSE","\n\n    GLFWwindow"," window ","glfwCreateWindow","WINDOW_WIDTH"," WINDOW_HEIGHT","\"advent_gl\"","\"Failed to create window.\"","glfwMakeContextCurrent","glfwSetKeyCallback"," keyHandler","gladLoadGLLoader","generic-function","reinterpret_cast","generic","class-name","\u003C","\u003E","\"Failed to initialize GLAD\"","while","glfwWindowShouldClose","glfwSwapBuffers","glfwPollEvents","GLFWwindow "," key"," scancode"," action"," mods","switch","key","case"," GLFW_KEY_ESCAPE",":","action ","=="," GLFW_PRESS","\n                ","glfwSetWindowShouldClose"," GLFW_TRUE","break","。","glfwInit()","ここ","GLFW_OPENGL_CORE_PROFILE","GLFW_TRUE","glfwSetKeyCallback()","glfwSwapBuffers()","glfwPollEvents()","実行してみる","make","まとめ","参考文献","https:\u002F\u002Fwww.khronos.org\u002Fregistry\u002FOpenGL\u002Findex_gl.php","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FRendering_Pipeline_Overview","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FFixed_Function_Pipeline","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FOpenGL_Context","https:\u002F\u002Flearnopengl.com\u002FGetting-started\u002FOpenGL","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FLoad_OpenGL_Functions","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FOpenGL_Loading_Library","https:\u002F\u002Fwww.khronos.org\u002Fopengl\u002Fwiki\u002FRelated_toolkits_and_APIs","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FFreeGLUT","https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FGLFW","https:\u002F\u002Fwww.glfw.org\u002Fdocs\u002Flatest\u002Fgroup__window.html","https:\u002F\u002Fwww.glfw.org\u002Fdocs\u002Flatest\u002Fwindow_guide.html","opengl-load-library","OpenGL Load Library","contextwindow-toolkits-library","Context\u002FWindow Toolkits Library","opengl本体","OpenGL本体","コンパイラビルドツール系","コンパイラ\u002Fビルドツール系","cmakeliststxtの作成","CMakeLists.txtの作成","\n  ","https:\u002F\u002Fgithub.com\u002FDav1dde\u002Fglad","freeglut","http:\u002F\u002Ffreeglut.sourceforge.net\u002F","GLFW","https:\u002F\u002Fwww.glfw.org\u002F","環境構築","\u002Farticles\u002Fseries-example","\u002Farticles\u002Fseries-sample")));